Error: Not allowed to define cross-origin object as property on [Object] or [Array] XrayWrapper 3 content-script.js:376:604
Feature Policy: Skipping unsupported feature name “clipboard-read”. content-script.js:39:3880
Feature Policy: Skipping unsupported feature name “clipboard-write”. content-script.js:39:3880
Feature Policy: Skipping unsupported feature name “clipboard-read”. content-script.js:39:89374
Feature Policy: Skipping unsupported feature name “clipboard-write”. content-script.js:39:89374
Error: Not allowed to define cross-origin object as property on [Object] or [Array] XrayWrapper 3 content-script.js:376:604
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔥🔥🔥 CALLING analyzeDiagonalProximity: defectors -> loyalists bundle.js:20943:17
🔍 Diagonal analysis: defectors -> loyalists (1 customers) bundle.js:21174:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,5): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (3,4): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,8): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=true, isInInterior=false bundle.js:30289:19
🎯 Point (5,8) -> NEAR-APOSTLES bundle.js:30291:21
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (2,3): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
✅ DIAGONAL: Customer ABC127 at (2,3) belongs to defectors (context assignment) bundle.js:21345:17
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,7): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,9): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,10): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
   📐 DIAGONAL DISTANCE: Customer ABC127 at (2,3) to loyalists boundary (3,5) = 2 bundle.js:21267:13
   📏 Potential ranges: sat=[1,2,3], loy=[0,1,2,3,4,5] bundle.js:21490:13
   📏 Search area: sat=[3], loy=[5,4] bundle.js:21491:13
   📏 Search area check: ABC127 at (2,3) - sat: false (2 in [3]), loy: false (3 in [5,4]) bundle.js:21497:15
   🔍 Customer ABC127 at (2,3) meets distance (2) but fails search area bundle.js:21215:17
   - Qualifying customers: 0 bundle.js:21245:13
🔍 CALCULATING loyalists_close_to_apostles: 
Object { loyalistsCount: 4, showSpecialZones: true, showNearApostles: true }
bundle.js:20948:17
🔍 analyzeSpecialZoneProximity: loyalists -> apostles | customers: 4 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for loyalists -> apostles: false bundle.js:21591:13
❌ Special zone proximity analysis skipped for loyalists -> apostles (conditions not met) bundle.js:21598:15
🔍 CALCULATING loyalists_close_to_near_apostles: 
Object { loyalistsCount: 4, showSpecialZones: true, showNearApostles: true }
bundle.js:20956:17
🔍 analyzeSpecialZoneProximity: loyalists -> near_apostles | customers: 4 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for loyalists -> near_apostles: true bundle.js:21591:13
📊 After target zone exclusion: 4 customers (excluded 0 already in near_apostles zone) bundle.js:21617:13
🔍 Customer ABC123 at (5,5) is on quadrant boundary: hostages=false, mercenaries=true bundle.js:21856:15
🚫 EXCLUDING customer ABC123 at (5,5) - on quadrant boundary (Rule 8) bundle.js:21623:17
📊 After boundary conflict exclusion: 3 customers (excluded 1 on quadrant boundaries) bundle.js:21627:13
🎯 loyalists customer ABC128 at (4,7) is 1 positions from near_apostles zone bundle.js:21657:17
📊 Special zone proximity result: loyalists -> near_apostles: 1 customers, 1 positions, avg distance: 1.00 bundle.js:21676:13
🔍 CALCULATING near_apostles_close_to_apostles: 
Object { near_apostlesCount: 1, showSpecialZones: true, showNearApostles: true }
bundle.js:20964:17
🔍 analyzeSpecialZoneProximity: near_apostles -> apostles | customers: 1 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for near_apostles -> apostles: true bundle.js:21591:13
📊 After target zone exclusion: 1 customers (excluded 0 already in apostles zone) bundle.js:21617:13
📊 After boundary conflict exclusion: 1 customers (excluded 0 on quadrant boundaries) bundle.js:21627:13
🎯 near_apostles customer ABC126 at (5,8) is 1 positions from apostles zone bundle.js:21657:17
📊 Special zone proximity result: near_apostles -> apostles: 1 customers, 1 positions, avg distance: 1.00 bundle.js:21676:13
🔍 CALCULATING defectors_close_to_terrorists: 
Object { defectorsCount: 1, showSpecialZones: true, showNearApostles: true }
bundle.js:20972:17
🔍 analyzeSpecialZoneProximity: defectors -> terrorists | customers: 1 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for defectors -> terrorists: true bundle.js:21591:13
📊 After target zone exclusion: 1 customers (excluded 0 already in terrorists zone) bundle.js:21617:13
📊 After boundary conflict exclusion: 1 customers (excluded 0 on quadrant boundaries) bundle.js:21627:13
📊 Special zone proximity result: defectors -> terrorists: 0 customers, 0 positions, avg distance: 0.00 bundle.js:21676:13
🔍 analyzeSpecialZoneProximity: apostles -> loyalists | customers: 2 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for apostles -> loyalists: false bundle.js:21591:13
❌ Special zone proximity analysis skipped for apostles -> loyalists (conditions not met) bundle.js:21598:15
🔍 analyzeSpecialZoneProximity: near_apostles -> loyalists | customers: 1 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for near_apostles -> loyalists: true bundle.js:21591:13
❌ No boundaries found for target zone: loyalists bundle.js:21605:15
🔍 analyzeSpecialZoneProximity: terrorists -> defectors | customers: 0 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for terrorists -> defectors: true bundle.js:21591:13
🔍 DEBUGGING SUMMARY CALCULATION - About to call calculateSummaryMetrics bundle.js:20992:13
🔍 Analysis details: 
Object { loyalists_close_to_mercenaries: 3, loyalists_close_to_hostages: 0, mercenaries_close_to_loyalists: 1, mercenaries_close_to_defectors: 1, hostages_close_to_loyalists: 0, hostages_close_to_defectors: 0, defectors_close_to_mercenaries: 0, defectors_close_to_hostages: 0 }
bundle.js:20993:13
🔍 Special zones details: 
Object { apostles_close_to_loyalists: 0, near_apostles_close_to_loyalists: 0, terrorists_close_to_defectors: 0 }
bundle.js:21005:15
🚨 SUMMARY CALCULATION RESULT: 
Object { totalProximityCustomers: 8, totalProximityPositions: 7 }
bundle.js:21014:13
🔍 Detecting crossroads customers... bundle.js:21973:13
🎯 Crossroads customer ABC125 appears in 3 relationships: mercenaries_close_to_loyalists_defectors, mercenaries_close_to_loyalists_defectors, mercenaries_close_to_hostages bundle.js:22005:17
📊 Crossroads detection complete: 1 total, 1 high-value bundle.js:22035:13
🚨 CROSSROADS DETECTION RESULT: 
Object { totalCrossroads: 1, highValueCrossroads: 1 }
bundle.js:21021:13
🚨 ENHANCED PROXIMITY CLASSIFIER FINAL RESULT: 
Object { loyalists_close_to_apostles: 0, loyalists_close_to_near_apostles: 1, defectors_close_to_terrorists: 0, showSpecialZones: true, showNearApostles: true }
bundle.js:21037:13
🚀🚀🚀 ENHANCED PROXIMITY CLASSIFIER - analyzeProximity COMPLETE bundle.js:21044:13
🚀 FINAL RESULTS: bundle.js:21045:13
   - Total proximity customers: 8 bundle.js:21046:13
   - Total proximity positions: 7 bundle.js:21047:13
   - Average risk score: 44 bundle.js:21048:13
   - Defectors close to loyalists: 0 customers bundle.js:21049:13
   - Defectors close to loyalists positions: 
Array []
bundle.js:21050:13
🎯 Proximity Analysis Result: 
Object { analysis: {…}, specialZones: {…}, summary: {…}, crossroads: {…}, settings: {…} }
bundle.js:21051:13
🔍 DISTRIBUTION SECTION: EnhancedProximityClassifier result: 
Object { loyalists_close_to_apostles: 0, loyalists_close_to_near_apostles: 1, defectors_close_to_terrorists: 0, showSpecialZones: true, mode: "ALL_AREAS" }
bundle.js:12528:15
🚨 DISTRIBUTION SECTION RETURNING RESULT: 
Object { analysis: {…}, specialZones: {…}, summary: {…}, crossroads: {…}, settings: {…} }
bundle.js:12535:15
🔍 DISTRIBUTION SECTION proximityAnalysis result: 
Object { loyalists_close_to_mercenaries: 3, isAvailable: true, totalCustomers: 10 }
bundle.js:12642:11
🚨 DISTRIBUTION SECTION PROXIMITY CALCULATIONS: 
Object { loyalists_near_mercenaries: 3, loyalists_near_hostages: 0, hostages_near_loyalists: 0, hostages_near_defectors: 0 }
bundle.js:12706:11
🔍 DISTRIBUTION USING CONTEXT DIRECTLY: 
Object { showSpecialZones: true, showNearApostles: true, contextDistribution: {…}, finalDistribution: {…} }
bundle.js:12727:11
🔍 Special Groups Debug: 
Object { showNearApostles: true, apostles: 2, near_apostles: 1, terrorists: 0, totalSpecial: 3 }
bundle.js:12858:11
🔍 Full Distribution Object: 
Object { loyalists: 9, defectors: 0, mercenaries: 0, hostages: 1, apostles: 7, nearApostles: 2, terrorists: 0 }
bundle.js:12865:11
🔍 Effective Distribution: 
Object { loyalists: 4, mercenaries: 1, hostages: 0, defectors: 1, apostles: 2, terrorists: 0, nearApostles: 1 }
bundle.js:12866:11
🎯 DistributionSection initialized: 
Object { dataLength: 10, showSpecialZones: true, showNearApostles: true }
bundle.js:12427:11
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,5): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (3,4): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,8): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=true, isInInterior=false bundle.js:30289:19
🎯 Point (5,8) -> NEAR-APOSTLES bundle.js:30291:21
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (2,3): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,7): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,9): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (3,5): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,10): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔍 DISTRIBUTION SECTION - Customer quadrant assignments: bundle.js:12468:11
  Customer ABC123 (5,5) → loyalists bundle.js:12470:13
  Customer ABC124 (4,6) → loyalists bundle.js:12470:13
  Customer ABC125 (3,4) → mercenaries bundle.js:12470:13
  Customer ABC126 (5,8) → near_apostles bundle.js:12470:13
  Customer ABC127 (2,3) → defectors bundle.js:12470:13
  Customer ABC128 (4,7) → loyalists bundle.js:12470:13
  Customer ABC129 (5,9) → apostles bundle.js:12470:13
  Customer ABC130 (3,5) → loyalists bundle.js:12470:13
  Customer ABC131 (4,6) → loyalists bundle.js:12470:13
  Customer ABC132 (5,10) → apostles bundle.js:12470:13
🚨🚨🚨 DISTRIBUTION SECTION COMPONENT LOADED - THIS SHOULD APPEAR bundle.js:12474:11
🔥🔥🔥 FORCING PROXIMITY ANALYSIS CALCULATION WITHOUT USEMEMO bundle.js:12476:11
🚨🚨🚨🚨🚨 USEMEMO START - THIS MUST APPEAR - TIMESTAMP: 1759505090774 bundle.js:12479:13
🚨🚨🚨 USEMEMO EXECUTING - COMPONENT IS RUNNING bundle.js:12480:13
🚨🚨🚨 DISTRIBUTION SECTION USEMEMO TRIGGERED - THIS SHOULD APPEAR IN LOGS: 
Object { dataLength: 10, satisfactionScale: "1-5", loyaltyScale: "0-10", midpoint: {…}, apostlesZoneSize: 1, terroristsZoneSize: 1, showSpecialZones: true, showNearApostles: true, mode: "ALL_AREAS", timestamp: 1759505090774 }
bundle.js:12481:13
🚨🚨🚨 FORCING FRESH PROXIMITY ANALYSIS CALCULATION bundle.js:12495:13
🔍 USEMEMO DEPENDENCIES DEBUG: 
Object { data: 10, satisfactionScale: "1-5", loyaltyScale: "0-10", midpointSat: 3, midpointLoy: 5, getQuadrantForPoint: "function", isPremium: false, showSpecialZones: true, showNearApostles: true, apostlesZoneSize: 1, … }
bundle.js:12498:13
🔍 DISTRIBUTION SECTION: Creating EnhancedProximityClassifier with: 
Object { dataLength: 10, satisfactionScale: "1-5", loyaltyScale: "0-10", midpoint: {…}, apostlesZoneSize: 1, terroristsZoneSize: 1, showSpecialZones: true, showNearApostles: true }
bundle.js:12513:15
🔥🔥🔥 DISTRIBUTION SECTION: About to call analyzeProximity... bundle.js:12524:15
🔥 THIS LOG SHOULD APPEAR BEFORE CALLING ENHANCED CLASSIFIER bundle.js:12525:15
🔥 USEMEMO IS DEFINITELY EXECUTING - TESTING bundle.js:12526:15
🔍 EnhancedProximityClassifier: Starting proximity analysis bundle.js:20875:13
   - Data points: 10, Midpoint: (3, 5) bundle.js:20876:13
🎯 EnhancedProximityClassifier.analyzeProximity called with: 
Object { dataLength: 10, isPremium: false, userThreshold: undefined, showSpecialZones: true, showNearApostles: true }
bundle.js:20877:13
🔍 THRESHOLD CALCULATION: 
Object { userThreshold: undefined, defaultThreshold: 2, directionalThresholds: {…}, midpoint: {…} }
bundle.js:20895:13
🔍 EnhancedProximityClassifier.groupCustomersByQuadrant - Starting grouping by context assignments (EXCLUDING midpoint customers) bundle.js:21070:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,5): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🎯 Point ABC123 at (5,5) assigned to: loyalists bundle.js:21081:15
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🎯 Point ABC124 at (4,6) assigned to: loyalists bundle.js:21081:15
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (3,4): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🎯 Point ABC125 at (3,4) assigned to: mercenaries bundle.js:21081:15
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,8): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=true, isInInterior=false bundle.js:30289:19
🎯 Point (5,8) -> NEAR-APOSTLES bundle.js:30291:21
🎯 Point ABC126 at (5,8) assigned to: near_apostles bundle.js:21081:15
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (2,3): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🎯 Point ABC127 at (2,3) assigned to: defectors bundle.js:21081:15
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,7): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🎯 Point ABC128 at (4,7) assigned to: loyalists bundle.js:21081:15
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,9): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🎯 Point ABC129 at (5,9) assigned to: apostles bundle.js:21081:15
🚫 EXCLUDING midpoint customer ABC130 at (3,5) from analytical counting bundle.js:21077:17
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🎯 Point ABC131 at (4,6) assigned to: loyalists bundle.js:21081:15
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,10): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🎯 Point ABC132 at (5,10) assigned to: apostles bundle.js:21081:15
📊 Final context-based grouping (EXCLUDES midpoint customers from analytical counting): 
Object { loyalists: 4, mercenaries: 1, hostages: 0, defectors: 1, apostles: 2, near_apostles: 1, terrorists: 0 }
bundle.js:21088:13
📊 Grouped customers: 
Object { loyalists: 4, mercenaries: 1, hostages: 0, defectors: 1, apostles: 2, near_apostles: 1, terrorists: 0 }
bundle.js:20904:13
🚨 About to call analyzeQuadrantProximity methods - threshold: 2 bundle.js:20913:13
🚨 Grouped customers available: 
Object { loyalists: 4, mercenaries: 1 }
bundle.js:20914:13
🔍 analyzeQuadrantProximity: loyalists -> mercenaries | customers: 4 | threshold: 2 bundle.js:21104:13
🔍 DEBUGGING loyalists -> mercenaries: bundle.js:21111:13
   Customer 1: ABC123 at (5, 5) bundle.js:21113:15
   Customer 2: ABC124 at (4, 6) bundle.js:21113:15
   Customer 3: ABC128 at (4, 7) bundle.js:21113:15
   Customer 4: ABC131 at (4, 6) bundle.js:21113:15
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,6], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3,4,5], loy=[5,6] bundle.js:22292:13
   📏 LATERAL DISTANCE: Customer ABC123 at (5,5) to mercenaries boundary = 2 bundle.js:22403:17
   ✅ LATERAL PROXIMITY: Customer ABC123 qualifies for mercenaries (distance: 2) bundle.js:22409:19
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[5,6,7] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[5,6,7] bundle.js:22292:13
   📏 Lateral search area check: ABC123 at (5,5) - sat: false (5 in [3]), loy: true (5 in [5,6,7]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC123 not in potential search area for hostages bundle.js:22414:17
   🔍 Customer ABC123: isProximity=true, targets=[mercenaries], looking for mercenaries bundle.js:21122:15
   ✅ Customer ABC123 matches proximity criteria for mercenaries bundle.js:21126:17
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,6], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3,4,5], loy=[5,6] bundle.js:22292:13
   📏 LATERAL DISTANCE: Customer ABC124 at (4,6) to mercenaries boundary = 1 bundle.js:22403:17
   ✅ LATERAL PROXIMITY: Customer ABC124 qualifies for mercenaries (distance: 1) bundle.js:22409:19
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[5,6,7] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[5,6,7] bundle.js:22292:13
   📏 Lateral search area check: ABC124 at (4,6) - sat: false (4 in [3]), loy: true (6 in [5,6,7]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC124 not in potential search area for hostages bundle.js:22414:17
   🔍 Customer ABC124: isProximity=true, targets=[mercenaries], looking for mercenaries bundle.js:21122:15
   ✅ Customer ABC124 matches proximity criteria for mercenaries bundle.js:21126:17
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,6], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3,4,5], loy=[5,6] bundle.js:22292:13
   📏 Lateral search area check: ABC128 at (4,7) - sat: true (4 in [3,4,5]), loy: false (7 in [5,6]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC128 not in potential search area for mercenaries bundle.js:22414:17
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[5,6,7] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[5,6,7] bundle.js:22292:13
   📏 Lateral search area check: ABC128 at (4,7) - sat: false (4 in [3]), loy: true (7 in [5,6,7]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC128 not in potential search area for hostages bundle.js:22414:17
   🔍 Customer ABC128: isProximity=false, targets=[], looking for mercenaries bundle.js:21122:15
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,6], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3,4,5], loy=[5,6] bundle.js:22292:13
   📏 LATERAL DISTANCE: Customer ABC131 at (4,6) to mercenaries boundary = 1 bundle.js:22403:17
   ✅ LATERAL PROXIMITY: Customer ABC131 qualifies for mercenaries (distance: 1) bundle.js:22409:19
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[5,6,7] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[5,6,7] bundle.js:22292:13
   📏 Lateral search area check: ABC131 at (4,6) - sat: false (4 in [3]), loy: true (6 in [5,6,7]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC131 not in potential search area for hostages bundle.js:22414:17
   🔍 Customer ABC131: isProximity=true, targets=[mercenaries], looking for mercenaries bundle.js:21122:15
   ✅ Customer ABC131 matches proximity criteria for mercenaries bundle.js:21126:17
📊 FINAL RESULT for loyalists -> mercenaries: 3 customers, 2 positions bundle.js:21147:13
🔍 analyzeQuadrantProximity: loyalists -> hostages | customers: 4 | threshold: 2 bundle.js:21104:13
🔍 DEBUGGING loyalists -> hostages: bundle.js:21111:13
   Customer 1: ABC123 at (5, 5) bundle.js:21113:15
   Customer 2: ABC124 at (4, 6) bundle.js:21113:15
   Customer 3: ABC128 at (4, 7) bundle.js:21113:15
   Customer 4: ABC131 at (4, 6) bundle.js:21113:15
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,6], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3,4,5], loy=[5,6] bundle.js:22292:13
   📏 LATERAL DISTANCE: Customer ABC123 at (5,5) to mercenaries boundary = 2 bundle.js:22403:17
   ✅ LATERAL PROXIMITY: Customer ABC123 qualifies for mercenaries (distance: 2) bundle.js:22409:19
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[5,6,7] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[5,6,7] bundle.js:22292:13
   📏 Lateral search area check: ABC123 at (5,5) - sat: false (5 in [3]), loy: true (5 in [5,6,7]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC123 not in potential search area for hostages bundle.js:22414:17
   🔍 Customer ABC123: isProximity=true, targets=[mercenaries], looking for hostages bundle.js:21122:15
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,6], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3,4,5], loy=[5,6] bundle.js:22292:13
   📏 LATERAL DISTANCE: Customer ABC124 at (4,6) to mercenaries boundary = 1 bundle.js:22403:17
   ✅ LATERAL PROXIMITY: Customer ABC124 qualifies for mercenaries (distance: 1) bundle.js:22409:19
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[5,6,7] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[5,6,7] bundle.js:22292:13
   📏 Lateral search area check: ABC124 at (4,6) - sat: false (4 in [3]), loy: true (6 in [5,6,7]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC124 not in potential search area for hostages bundle.js:22414:17
   🔍 Customer ABC124: isProximity=true, targets=[mercenaries], looking for hostages bundle.js:21122:15
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,6], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3,4,5], loy=[5,6] bundle.js:22292:13
   📏 Lateral search area check: ABC128 at (4,7) - sat: true (4 in [3,4,5]), loy: false (7 in [5,6]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC128 not in potential search area for mercenaries bundle.js:22414:17
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[5,6,7] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[5,6,7] bundle.js:22292:13
   📏 Lateral search area check: ABC128 at (4,7) - sat: false (4 in [3]), loy: true (7 in [5,6,7]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC128 not in potential search area for hostages bundle.js:22414:17
   🔍 Customer ABC128: isProximity=false, targets=[], looking for hostages bundle.js:21122:15
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,6], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3,4,5], loy=[5,6] bundle.js:22292:13
   📏 LATERAL DISTANCE: Customer ABC131 at (4,6) to mercenaries boundary = 1 bundle.js:22403:17
   ✅ LATERAL PROXIMITY: Customer ABC131 qualifies for mercenaries (distance: 1) bundle.js:22409:19
   📏 Lateral potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[5,6,7] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[5,6,7] bundle.js:22292:13
   📏 Lateral search area check: ABC131 at (4,6) - sat: false (4 in [3]), loy: true (6 in [5,6,7]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC131 not in potential search area for hostages bundle.js:22414:17
   🔍 Customer ABC131: isProximity=true, targets=[mercenaries], looking for hostages bundle.js:21122:15
📊 FINAL RESULT for loyalists -> hostages: 0 customers, 0 positions bundle.js:21147:13
🔍 analyzeQuadrantProximity: mercenaries -> loyalists | customers: 1 | threshold: 2 bundle.js:21104:13
🔍 DEBUGGING mercenaries -> loyalists: bundle.js:21111:13
   Customer 1: ABC125 at (3, 4) bundle.js:21113:15
   📏 Lateral potential ranges: sat=[3,4,5], loy=[0,1,2,3,4,5] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,4], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3,4,5], loy=[5,4] bundle.js:22292:13
   📏 LATERAL DISTANCE: Customer ABC125 at (3,4) to loyalists boundary = 1 bundle.js:22403:17
   ✅ LATERAL PROXIMITY: Customer ABC125 qualifies for loyalists (distance: 1) bundle.js:22409:19
   📏 Lateral potential ranges: sat=[3,4,5], loy=[0,1,2,3,4,5] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[3,4,5] bundle.js:22292:13
   📏 LATERAL DISTANCE: Customer ABC125 at (3,4) to defectors boundary = 1 bundle.js:22403:17
   ✅ LATERAL PROXIMITY: Customer ABC125 qualifies for defectors (distance: 1) bundle.js:22409:19
   🔍 Customer ABC125: isProximity=true, targets=[loyalists, defectors], looking for loyalists bundle.js:21122:15
   ✅ Customer ABC125 matches proximity criteria for loyalists bundle.js:21126:17
📊 FINAL RESULT for mercenaries -> loyalists: 1 customers, 1 positions bundle.js:21147:13
🔍 analyzeQuadrantProximity: mercenaries -> defectors | customers: 1 | threshold: 2 bundle.js:21104:13
🔍 DEBUGGING mercenaries -> defectors: bundle.js:21111:13
   Customer 1: ABC125 at (3, 4) bundle.js:21113:15
   📏 Lateral potential ranges: sat=[3,4,5], loy=[0,1,2,3,4,5] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,4], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3,4,5], loy=[5,4] bundle.js:22292:13
   📏 LATERAL DISTANCE: Customer ABC125 at (3,4) to loyalists boundary = 1 bundle.js:22403:17
   ✅ LATERAL PROXIMITY: Customer ABC125 qualifies for loyalists (distance: 1) bundle.js:22409:19
   📏 Lateral potential ranges: sat=[3,4,5], loy=[0,1,2,3,4,5] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[3,4,5] bundle.js:22292:13
   📏 LATERAL DISTANCE: Customer ABC125 at (3,4) to defectors boundary = 1 bundle.js:22403:17
   ✅ LATERAL PROXIMITY: Customer ABC125 qualifies for defectors (distance: 1) bundle.js:22409:19
   🔍 Customer ABC125: isProximity=true, targets=[loyalists, defectors], looking for defectors bundle.js:21122:15
   ✅ Customer ABC125 matches proximity criteria for defectors bundle.js:21126:17
📊 FINAL RESULT for mercenaries -> defectors: 1 customers, 1 positions bundle.js:21147:13
🔍 analyzeQuadrantProximity: hostages -> loyalists | customers: 0 | threshold: 2 bundle.js:21104:13
❌ No customers to analyze bundle.js:21106:15
🔍 analyzeQuadrantProximity: hostages -> defectors | customers: 0 | threshold: 2 bundle.js:21104:13
❌ No customers to analyze bundle.js:21106:15
🔍 analyzeQuadrantProximity: defectors -> mercenaries | customers: 1 | threshold: 2 bundle.js:21104:13
🔍 DEBUGGING defectors -> mercenaries: bundle.js:21111:13
   Customer 1: ABC127 at (2, 3) bundle.js:21113:15
   📏 Lateral potential ranges: sat=[1,2,3], loy=[0,1,2,3,4,5] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=mercenaries, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[3,4,5] bundle.js:22292:13
   📏 Lateral search area check: ABC127 at (2,3) - sat: false (2 in [3]), loy: true (3 in [3,4,5]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC127 not in potential search area for mercenaries bundle.js:22414:17
   📏 Lateral potential ranges: sat=[1,2,3], loy=[0,1,2,3,4,5] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=hostages, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,4], irrelevantPositions=[1,2,3] bundle.js:22291:13
   📏 Lateral search area: sat=[1,2,3], loy=[5,4] bundle.js:22292:13
   📏 Lateral search area check: ABC127 at (2,3) - sat: true (2 in [1,2,3]), loy: false (3 in [5,4]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC127 not in potential search area for hostages bundle.js:22414:17
   🔍 Customer ABC127: isProximity=false, targets=[], looking for mercenaries bundle.js:21122:15
📊 FINAL RESULT for defectors -> mercenaries: 0 customers, 0 positions bundle.js:21147:13
🔍 analyzeQuadrantProximity: defectors -> hostages | customers: 1 | threshold: 2 bundle.js:21104:13
🔍 DEBUGGING defectors -> hostages: bundle.js:21111:13
   Customer 1: ABC127 at (2, 3) bundle.js:21113:15
   📏 Lateral potential ranges: sat=[1,2,3], loy=[0,1,2,3,4,5] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=mercenaries, relevantDimension=sat bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[3,4,5] bundle.js:22291:13
   📏 Lateral search area: sat=[3], loy=[3,4,5] bundle.js:22292:13
   📏 Lateral search area check: ABC127 at (2,3) - sat: false (2 in [3]), loy: true (3 in [3,4,5]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC127 not in potential search area for mercenaries bundle.js:22414:17
   📏 Lateral potential ranges: sat=[1,2,3], loy=[0,1,2,3,4,5] bundle.js:22289:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=hostages, relevantDimension=loy bundle.js:22290:13
   📏 Lateral debug: relevantPositions=[5,4], irrelevantPositions=[1,2,3] bundle.js:22291:13
   📏 Lateral search area: sat=[1,2,3], loy=[5,4] bundle.js:22292:13
   📏 Lateral search area check: ABC127 at (2,3) - sat: true (2 in [1,2,3]), loy: false (3 in [5,4]) bundle.js:22361:15
   ❌ LATERAL SEARCH AREA: Customer ABC127 not in potential search area for hostages bundle.js:22414:17
   🔍 Customer ABC127: isProximity=false, targets=[], looking for hostages bundle.js:21122:15
📊 FINAL RESULT for defectors -> hostages: 0 customers, 0 positions bundle.js:21147:13
🔥🔥🔥 CALLING analyzeDiagonalProximity: loyalists -> defectors bundle.js:20931:17
🔍 Diagonal analysis: loyalists -> defectors (4 customers) bundle.js:21174:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,5): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
✅ DIAGONAL: Customer ABC123 at (5,5) belongs to loyalists (context assignment) bundle.js:21345:17
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
✅ DIAGONAL: Customer ABC124 at (4,6) belongs to loyalists (context assignment) bundle.js:21345:17
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (3,4): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,8): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=true, isInInterior=false bundle.js:30289:19
🎯 Point (5,8) -> NEAR-APOSTLES bundle.js:30291:21
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (2,3): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,7): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
✅ DIAGONAL: Customer ABC128 at (4,7) belongs to loyalists (context assignment) bundle.js:21345:17
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,9): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
✅ DIAGONAL: Customer ABC131 at (4,6) belongs to loyalists (context assignment) bundle.js:21345:17
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,10): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
   📐 DIAGONAL DISTANCE: Customer ABC123 at (5,5) to defectors boundary (3,5) = 2 bundle.js:21267:13
   📏 Potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:21490:13
   📏 Search area: sat=[3], loy=[5,6] bundle.js:21491:13
   📏 Search area check: ABC123 at (5,5) - sat: false (5 in [3]), loy: true (5 in [5,6]) bundle.js:21497:15
   🔍 Customer ABC123 at (5,5) meets distance (2) but fails search area bundle.js:21215:17
   📐 DIAGONAL DISTANCE: Customer ABC124 at (4,6) to defectors boundary (3,5) = 1 bundle.js:21267:13
   📏 Potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:21490:13
   📏 Search area: sat=[3], loy=[5,6] bundle.js:21491:13
   📏 Search area check: ABC124 at (4,6) - sat: false (4 in [3]), loy: true (6 in [5,6]) bundle.js:21497:15
   🔍 Customer ABC124 at (4,6) meets distance (1) but fails search area bundle.js:21215:17
   📐 DIAGONAL DISTANCE: Customer ABC128 at (4,7) to defectors boundary (3,5) = 2 bundle.js:21267:13
   📏 Potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:21490:13
   📏 Search area: sat=[3], loy=[5,6] bundle.js:21491:13
   📏 Search area check: ABC128 at (4,7) - sat: false (4 in [3]), loy: false (7 in [5,6]) bundle.js:21497:15
   🔍 Customer ABC128 at (4,7) meets distance (2) but fails search area bundle.js:21215:17
   📐 DIAGONAL DISTANCE: Customer ABC131 at (4,6) to defectors boundary (3,5) = 1 bundle.js:21267:13
   📏 Potential ranges: sat=[3,4,5], loy=[5,6,7,8,9,10] bundle.js:21490:13
   📏 Search area: sat=[3], loy=[5,6] bundle.js:21491:13
   📏 Search area check: ABC131 at (4,6) - sat: false (4 in [3]), loy: true (6 in [5,6]) bundle.js:21497:15
   🔍 Customer ABC131 at (4,6) meets distance (1) but fails search area bundle.js:21215:17
   - Qualifying customers: 0 bundle.js:21245:13
🔥🔥🔥 CALLING analyzeDiagonalProximity: mercenaries -> hostages bundle.js:20935:17
🔍 Diagonal analysis: mercenaries -> hostages (1 customers) bundle.js:21174:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,5): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (3,4): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
✅ DIAGONAL: Customer ABC125 at (3,4) belongs to mercenaries (context assignment) bundle.js:21345:17
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,8): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=true, isInInterior=false bundle.js:30289:19
🎯 Point (5,8) -> NEAR-APOSTLES bundle.js:30291:21
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (2,3): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,7): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,9): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,10): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
   📐 DIAGONAL DISTANCE: Customer ABC125 at (3,4) to hostages boundary (3,5) = 1 bundle.js:21267:13
   📏 Potential ranges: sat=[3,4,5], loy=[0,1,2,3,4,5] bundle.js:21490:13
   📏 Search area: sat=[3], loy=[5,4] bundle.js:21491:13
   - Qualifying customers: 1 bundle.js:21245:13
🔥🔥🔥 CALLING analyzeDiagonalProximity: hostages -> mercenaries bundle.js:20939:17
🔍 Diagonal analysis: hostages -> mercenaries (0 customers) bundle.js:21174:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,5): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (3,4): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,8): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=true, isInInterior=false bundle.js:30289:19
🎯 Point (5,8) -> NEAR-APOSTLES bundle.js:30291:21
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (2,3): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,7): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,9): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,10): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔥🔥🔥 CALLING analyzeDiagonalProximity: defectors -> loyalists bundle.js:20943:17
🔍 Diagonal analysis: defectors -> loyalists (1 customers) bundle.js:21174:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,5): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (3,4): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,8): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=true, isInInterior=false bundle.js:30289:19
🎯 Point (5,8) -> NEAR-APOSTLES bundle.js:30291:21
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (2,3): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
✅ DIAGONAL: Customer ABC127 at (2,3) belongs to defectors (context assignment) bundle.js:21345:17
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,7): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,9): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (4,6): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-5, loyaltyScale=0-10 bundle.js:31263:11
🔧 Parsed scales: satMin=1, satMax=5, loyMin=0, loyMax=10 bundle.js:31264:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:31293:11
🔧 Apostles zone: satisfaction >= 4, loyalty >= 9 bundle.js:31294:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:31295:11
🔍 Near-Apostles check for (5,10): bundle.js:30286:19
🔍   nearApostlesMinSat=3, apostlesMinSat=4 bundle.js:30287:19
🔍   nearApostlesMinLoy=8, apostlesMinLoy=9 bundle.js:30288:19
🔍   isInLeftEdge=false, isInBottomEdge=false, isInInterior=false bundle.js:30289:19
   📐 DIAGONAL DISTANCE: Customer ABC127 at (2,3) to loyalists boundary (3,5) = 2 bundle.js:21267:13
   📏 Potential ranges: sat=[1,2,3], loy=[0,1,2,3,4,5] bundle.js:21490:13
   📏 Search area: sat=[3], loy=[5,4] bundle.js:21491:13
   📏 Search area check: ABC127 at (2,3) - sat: false (2 in [3]), loy: false (3 in [5,4]) bundle.js:21497:15
   🔍 Customer ABC127 at (2,3) meets distance (2) but fails search area bundle.js:21215:17
   - Qualifying customers: 0 bundle.js:21245:13
🔍 CALCULATING loyalists_close_to_apostles: 
Object { loyalistsCount: 4, showSpecialZones: true, showNearApostles: true }
bundle.js:20948:17
🔍 analyzeSpecialZoneProximity: loyalists -> apostles | customers: 4 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for loyalists -> apostles: false bundle.js:21591:13
❌ Special zone proximity analysis skipped for loyalists -> apostles (conditions not met) bundle.js:21598:15
🔍 CALCULATING loyalists_close_to_near_apostles: 
Object { loyalistsCount: 4, showSpecialZones: true, showNearApostles: true }
bundle.js:20956:17
🔍 analyzeSpecialZoneProximity: loyalists -> near_apostles | customers: 4 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for loyalists -> near_apostles: true bundle.js:21591:13
📊 After target zone exclusion: 4 customers (excluded 0 already in near_apostles zone) bundle.js:21617:13
🔍 Customer ABC123 at (5,5) is on quadrant boundary: hostages=false, mercenaries=true bundle.js:21856:15
🚫 EXCLUDING customer ABC123 at (5,5) - on quadrant boundary (Rule 8) bundle.js:21623:17
📊 After boundary conflict exclusion: 3 customers (excluded 1 on quadrant boundaries) bundle.js:21627:13
🎯 loyalists customer ABC128 at (4,7) is 1 positions from near_apostles zone bundle.js:21657:17
📊 Special zone proximity result: loyalists -> near_apostles: 1 customers, 1 positions, avg distance: 1.00 bundle.js:21676:13
🔍 CALCULATING near_apostles_close_to_apostles: 
Object { near_apostlesCount: 1, showSpecialZones: true, showNearApostles: true }
bundle.js:20964:17
🔍 analyzeSpecialZoneProximity: near_apostles -> apostles | customers: 1 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for near_apostles -> apostles: true bundle.js:21591:13
📊 After target zone exclusion: 1 customers (excluded 0 already in apostles zone) bundle.js:21617:13
📊 After boundary conflict exclusion: 1 customers (excluded 0 on quadrant boundaries) bundle.js:21627:13
🎯 near_apostles customer ABC126 at (5,8) is 1 positions from apostles zone bundle.js:21657:17
📊 Special zone proximity result: near_apostles -> apostles: 1 customers, 1 positions, avg distance: 1.00 bundle.js:21676:13
🔍 CALCULATING defectors_close_to_terrorists: 
Object { defectorsCount: 1, showSpecialZones: true, showNearApostles: true }
bundle.js:20972:17
🔍 analyzeSpecialZoneProximity: defectors -> terrorists | customers: 1 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for defectors -> terrorists: true bundle.js:21591:13
📊 After target zone exclusion: 1 customers (excluded 0 already in terrorists zone) bundle.js:21617:13
📊 After boundary conflict exclusion: 1 customers (excluded 0 on quadrant boundaries) bundle.js:21627:13
📊 Special zone proximity result: defectors -> terrorists: 0 customers, 0 positions, avg distance: 0.00 bundle.js:21676:13
🔍 analyzeSpecialZoneProximity: apostles -> loyalists | customers: 2 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for apostles -> loyalists: false bundle.js:21591:13
❌ Special zone proximity analysis skipped for apostles -> loyalists (conditions not met) bundle.js:21598:15
🔍 analyzeSpecialZoneProximity: near_apostles -> loyalists | customers: 1 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for near_apostles -> loyalists: true bundle.js:21591:13
❌ No boundaries found for target zone: loyalists bundle.js:21605:15
🔍 analyzeSpecialZoneProximity: terrorists -> defectors | customers: 0 | showSpecialZones: true | showNearApostles: true bundle.js:21587:13
🔍 shouldAnalyzeSpecialZoneProximity result for terrorists -> defectors: true bundle.js:21591:13
🔍 DEBUGGING SUMMARY CALCULATION - About to call calculateSummaryMetrics bundle.js:20992:13
🔍 Analysis details: 
Object { loyalists_close_to_mercenaries: 3, loyalists_close_to_hostages: 0, mercenaries_close_to_loyalists: 1, mercenaries_close_to_defectors: 1, hostages_close_to_loyalists: 0, hostages_close_to_defectors: 0, defectors_close_to_mercenaries: 0, defectors_close_to_hostages: 0 }
bundle.js:20993:13
🔍 Special zones details: 
Object { apostles_close_to_loyalists: 0, near_apostles_close_to_loyalists: 0, terrorists_close_to_defectors: 0 }
bundle.js:21005:15
🚨 SUMMARY CALCULATION RESULT: 
Object { totalProximityCustomers: 8, totalProximityPositions: 7 }
bundle.js:21014:13
🔍 Detecting crossroads customers... bundle.js:21973:13
🎯 Crossroads customer ABC125 appears in 3 relationships: mercenaries_close_to_loyalists_defectors, mercenaries_close_to_loyalists_defectors, mercenaries_close_to_hostages bundle.js:22005:17
📊 Crossroads detection complete: 1 total, 1 high-value bundle.js:22035:13
🚨 CROSSROADS DETECTION RESULT: 
Object { totalCrossroads: 1, highValueCrossroads: 1 }
bundle.js:21021:13
🚨 ENHANCED PROXIMITY CLASSIFIER FINAL RESULT: 
Object { loyalists_close_to_apostles: 0, loyalists_close_to_near_apostles: 1, defectors_close_to_terrorists: 0, showSpecialZones: true, showNearApostles: true }
bundle.js:21037:13
🚀🚀🚀 ENHANCED PROXIMITY CLASSIFIER - analyzeProximity COMPLETE bundle.js:21044:13
🚀 FINAL RESULTS: bundle.js:21045:13
   - Total proximity customers: 8 bundle.js:21046:13
   - Total proximity positions: 7 bundle.js:21047:13
   - Average risk score: 44 bundle.js:21048:13
   - Defectors close to loyalists: 0 customers bundle.js:21049:13
   - Defectors close to loyalists positions: 
Array []
bundle.js:21050:13
🎯 Proximity Analysis Result: 
Object { analysis: {…}, specialZones: {…}, summary: {…}, crossroads: {…}, settings: {…} }
bundle.js:21051:13
🔍 DISTRIBUTION SECTION: EnhancedProximityClassifier result: 
Object { loyalists_close_to_apostles: 0, loyalists_close_to_near_apostles: 1, defectors_close_to_terrorists: 0, showSpecialZones: true, mode: "ALL_AREAS" }
bundle.js:12528:15
🚨 DISTRIBUTION SECTION RETURNING RESULT: 
Object { analysis: {…}, specialZones: {…}, summary: {…}, crossroads: {…}, settings: {…} }
bundle.js:12535:15
🔍 DISTRIBUTION SECTION proximityAnalysis result: 
Object { loyalists_close_to_mercenaries: 3, isAvailable: true, totalCustomers: 10 }
bundle.js:12642:11
🚨 DISTRIBUTION SECTION PROXIMITY CALCULATIONS: 
Object { loyalists_near_mercenaries: 3, loyalists_near_hostages: 0, hostages_near_loyalists: 0, hostages_near_defectors: 0 }
bundle.js:12706:11
🔍 DISTRIBUTION USING CONTEXT DIRECTLY: 
Object { showSpecialZones: true, showNearApostles: true, contextDistribution: {…}, finalDistribution: {…} }
bundle.js:12727:11
🔍 Special Groups Debug: 
Object { showNearApostles: true, apostles: 2, near_apostles: 1, terrorists: 0, totalSpecial: 3 }
bundle.js:12858:11
🔍 Full Distribution Object: 
Object { loyalists: 9, defectors: 0, mercenaries: 0, hostages: 1, apostles: 7, nearApostles: 2, terrorists: 0 }
bundle.js:12865:11
🔍 Effective Distribution: 
Object { loyalists: 4, mercenaries: 1, hostages: 0, defectors: 1, apostles: 2, terrorists: 0, nearApostles: 1 }
bundle.js:12866:11
🎯 ProximitySection: Using context distribution: 
Object { loyalists: 4, mercenaries: 1, hostages: 0, defectors: 1, apostles: 2, terrorists: 0, near_apostles: 1 }
bundle.js:16539:11
🔍 Context distribution totals: 
Object { loyalists: 4, apostles: 2, total_loyalist_area: 6, totalFromContext: 9 }
bundle.js:16543:11
🔍 ABOUT TO USE proximityAnalysis.summary: 
Object { totalProximityCustomers: 8, isAvailable: true, source: "proximityAnalysis.summary" }
bundle.js:16689:11
🎯 ProximitySection: Using context distribution: 
Object { loyalists: 4, mercenaries: 1, hostages: 0, defectors: 1, apostles: 2, terrorists: 0, near_apostles: 1 }
bundle.js:16539:11
🔍 Context distribution totals: 
Object { loyalists: 4, apostles: 2, total_loyalist_area: 6, totalFromContext: 9 }
bundle.js:16543:11
🔍 ABOUT TO USE proximityAnalysis.summary: 
Object { totalProximityCustomers: 8, isAvailable: true, source: "proximityAnalysis.summary" }
bundle.js:16689:11
