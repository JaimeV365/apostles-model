  Customer segmentorID-00064 (7,5) → apostles bundle.js:12470:13
  Customer segmentorID-00065 (7,1) → mercenaries bundle.js:12470:13
  Customer segmentorID-00066 (7,2) → mercenaries bundle.js:12470:13
  Customer segmentorID-00067 (7,3) → near_apostles bundle.js:12470:13
  Customer segmentorID-00068 (7,4) → apostles bundle.js:12470:13
  Customer segmentorID-00069 (7,5) → apostles bundle.js:12470:13
  Customer segmentorID-00070 (4,1) → mercenaries bundle.js:12470:13
  Customer segmentorID-00071 (4,1) → mercenaries bundle.js:12470:13
  Customer segmentorID-00072 (4,1) → mercenaries bundle.js:12470:13
  Customer segmentorID-00073 (4,1) → mercenaries bundle.js:12470:13
  Customer segmentorID-00074 (4,1) → mercenaries bundle.js:12470:13
  Customer segmentorID-00075 (4,1) → mercenaries bundle.js:12470:13
  Customer segmentorID-00076 (4,1) → mercenaries bundle.js:12470:13
  Customer segmentorID-00077 (4,1) → mercenaries bundle.js:12470:13
  Customer segmentorID-00078 (4,1) → mercenaries bundle.js:12470:13
  Customer segmentorID-00079 (4,1) → mercenaries bundle.js:12470:13
  Customer segmentorID-00080 (2,2) → terrorists bundle.js:12470:13
  Customer segmentorID-00081 (2,2) → terrorists bundle.js:12470:13
  Customer segmentorID-00082 (2,2) → terrorists bundle.js:12470:13
  Customer segmentorID-00083 (2,2) → terrorists bundle.js:12470:13
  Customer segmentorID-00084 (2,2) → terrorists bundle.js:12470:13
  Customer segmentorID-00085 (2,2) → terrorists bundle.js:12470:13
  Customer segmentorID-00086 (2,2) → terrorists bundle.js:12470:13
  Customer segmentorID-00087 (2,2) → terrorists bundle.js:12470:13
  Customer segmentorID-00088 (2,2) → terrorists bundle.js:12470:13
  Customer segmentorID-00089 (2,2) → terrorists bundle.js:12470:13
  Customer segmentorID-00090 (2,2) → terrorists bundle.js:12470:13
  Customer segmentorID-00091 (3,4) → hostages bundle.js:12470:13
  Customer segmentorID-00092 (3,4) → hostages bundle.js:12470:13
  Customer segmentorID-00093 (3,4) → hostages bundle.js:12470:13
  Customer segmentorID-00094 (3,4) → hostages bundle.js:12470:13
  Customer segmentorID-00095 (3,4) → hostages bundle.js:12470:13
  Customer segmentorID-00096 (3,4) → hostages bundle.js:12470:13
  Customer segmentorID-00097 (3,4) → hostages bundle.js:12470:13
  Customer segmentorID-00098 (3,4) → hostages bundle.js:12470:13
  Customer segmentorID-00099 (3,4) → hostages bundle.js:12470:13
🚨🚨🚨 DISTRIBUTION SECTION COMPONENT LOADED - THIS SHOULD APPEAR bundle.js:12474:11
🔥🔥🔥 FORCING PROXIMITY ANALYSIS CALCULATION WITHOUT USEMEMO bundle.js:12476:11
🚨🚨🚨🚨🚨 USEMEMO START - THIS MUST APPEAR - TIMESTAMP: 1759486658929 bundle.js:12479:13
🚨🚨🚨 USEMEMO EXECUTING - COMPONENT IS RUNNING bundle.js:12480:13
🚨🚨🚨 DISTRIBUTION SECTION USEMEMO TRIGGERED - THIS SHOULD APPEAR IN LOGS: 
Object { dataLength: 100, satisfactionScale: "1-7", loyaltyScale: "1-5", midpoint: {…}, apostlesZoneSize: 1, terroristsZoneSize: 1, showSpecialZones: true, showNearApostles: true, mode: "ALL_AREAS", timestamp: 1759486658929 }
bundle.js:12481:13
🚨🚨🚨 FORCING FRESH PROXIMITY ANALYSIS CALCULATION bundle.js:12495:13
🔍 USEMEMO DEPENDENCIES DEBUG: 
Object { data: 100, satisfactionScale: "1-7", loyaltyScale: "1-5", midpointSat: 4, midpointLoy: 3, getQuadrantForPoint: "function", isPremium: false, showSpecialZones: true, showNearApostles: true, apostlesZoneSize: 1, … }
bundle.js:12498:13
🔍 DISTRIBUTION SECTION: Creating EnhancedProximityClassifier with: 
Object { dataLength: 100, satisfactionScale: "1-7", loyaltyScale: "1-5", midpoint: {…}, apostlesZoneSize: 1, terroristsZoneSize: 1, showSpecialZones: true, showNearApostles: true }
bundle.js:12513:15
🔥🔥🔥 DISTRIBUTION SECTION: About to call analyzeProximity... bundle.js:12524:15
🔥 THIS LOG SHOULD APPEAR BEFORE CALLING ENHANCED CLASSIFIER bundle.js:12525:15
🔥 USEMEMO IS DEFINITELY EXECUTING - TESTING bundle.js:12526:15
🔍 EnhancedProximityClassifier: Starting proximity analysis bundle.js:20877:13
   - Data points: 100, Midpoint: (4, 3) bundle.js:20878:13
🎯 EnhancedProximityClassifier.analyzeProximity called with: 
Object { dataLength: 100, isPremium: false, userThreshold: undefined, showSpecialZones: true, showNearApostles: true }
bundle.js:20879:13
🔍 THRESHOLD CALCULATION: 
Object { userThreshold: undefined, defaultThreshold: 2, directionalThresholds: {…}, midpoint: {…} }
bundle.js:20897:13
🔍 EnhancedProximityClassifier.groupCustomersByQuadrant - Starting grouping by context assignments (EXCLUDING midpoint customers) bundle.js:21072:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00000 at (1,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00000: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00000 at (1,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00000 at (1,1) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00001 at (1,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00001: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00001 at (1,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00001 at (1,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00002 at (1,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00002: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00002 at (1,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00002 at (1,3) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00003 at (1,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00003: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00003 at (1,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00003 at (1,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00004 at (1,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00004: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00004 at (1,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00004 at (1,5) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00005 at (1,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00005: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00005 at (1,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00005 at (1,1) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00006 at (1,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00006: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00006 at (1,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00006 at (1,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00007 at (1,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00007: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00007 at (1,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00007 at (1,3) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00008 at (1,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00008: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00008 at (1,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00008 at (1,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00009 at (1,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00009: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00009 at (1,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00009 at (1,5) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00010 at (2,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00010: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00010 at (2,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00010 at (2,1) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00011 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00011: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00011 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00011 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00012 at (2,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00012: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00012 at (2,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00012 at (2,3) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00013 at (2,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00013: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00013 at (2,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00013 at (2,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00014 at (2,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00014: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00014 at (2,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00014 at (2,5) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00015 at (2,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00015: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00015 at (2,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00015 at (2,1) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00016 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00016: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00016 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00016 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00017 at (2,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00017: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00017 at (2,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00017 at (2,3) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00018 at (2,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00018: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00018 at (2,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00018 at (2,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00019 at (2,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00019: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00019 at (2,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00019 at (2,5) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00020 at (3,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00020: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00020 at (3,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,1) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🎯 Point segmentorID-00020 at (3,1) assigned to: defectors bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00021 at (3,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00021: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00021 at (3,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,2) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🎯 Point segmentorID-00021 at (3,2) assigned to: defectors bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00022 at (3,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00022: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00022 at (3,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00022 at (3,3) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00023 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00023: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00023 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00023 at (3,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00024 at (3,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00024: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00024 at (3,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00024 at (3,5) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00025 at (3,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00025: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00025 at (3,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,1) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🎯 Point segmentorID-00025 at (3,1) assigned to: defectors bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00026 at (3,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00026: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00026 at (3,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,2) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🎯 Point segmentorID-00026 at (3,2) assigned to: defectors bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00027 at (3,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00027: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00027 at (3,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00027 at (3,3) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00028 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00028: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00028 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00028 at (3,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00029 at (3,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00029: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00029 at (3,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00029 at (3,5) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00030 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00030: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00030 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00030 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00031 at (4,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00031: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00031 at (4,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00031 at (4,2) assigned to: mercenaries bundle.js:21083:15
🚫 EXCLUDING midpoint customer segmentorID-00032 at (4,3) from analytical counting bundle.js:21079:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00033 at (4,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00033: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00033 at (4,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,4) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🎯 Point segmentorID-00033 at (4,4) assigned to: loyalists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00034 at (4,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00034: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00034 at (4,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,5) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🎯 Point segmentorID-00034 at (4,5) assigned to: loyalists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00035 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00035: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00035 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00035 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00036 at (4,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00036: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00036 at (4,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00036 at (4,2) assigned to: mercenaries bundle.js:21083:15
🚫 EXCLUDING midpoint customer segmentorID-00037 at (4,3) from analytical counting bundle.js:21079:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00038 at (4,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00038: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00038 at (4,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,4) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🎯 Point segmentorID-00038 at (4,4) assigned to: loyalists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00039 at (4,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00039: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00039 at (4,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,5) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🎯 Point segmentorID-00039 at (4,5) assigned to: loyalists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00040 at (5,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00040: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00040 at (5,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00040 at (5,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00041 at (5,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00041: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00041 at (5,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00041 at (5,2) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00042 at (5,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00042: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00042 at (5,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,3) -> NEAR-APOSTLES (corner): sat=5, loy=3 bundle.js:25238:21
🎯 Point segmentorID-00042 at (5,3) assigned to: near_apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00043 at (5,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00043: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00043 (5,4) manually assigned to apostles bundle.js:25324:15
🎯 Point segmentorID-00043 at (5,4) assigned to: apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00044 at (5,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00044: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00044 at (5,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,5) -> NEAR-APOSTLES (left edge): sat in [5,6), loy>=4 bundle.js:25226:21
🎯 Point segmentorID-00044 at (5,5) assigned to: near_apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00045 at (5,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00045: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00045 at (5,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00045 at (5,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00046 at (5,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00046: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00046 at (5,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00046 at (5,2) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00047 at (5,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00047: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00047 at (5,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,3) -> NEAR-APOSTLES (corner): sat=5, loy=3 bundle.js:25238:21
🎯 Point segmentorID-00047 at (5,3) assigned to: near_apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00048 at (5,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00048: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00048 (5,4) manually assigned to apostles bundle.js:25324:15
🎯 Point segmentorID-00048 at (5,4) assigned to: apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00049 at (5,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00049: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00049 at (5,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,5) -> NEAR-APOSTLES (left edge): sat in [5,6), loy>=4 bundle.js:25226:21
🎯 Point segmentorID-00049 at (5,5) assigned to: near_apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00050 at (6,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00050: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00050 at (6,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00050 at (6,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00051 at (6,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00051: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00051 at (6,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00051 at (6,2) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00052 at (6,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00052: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00052 at (6,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (6,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🎯 Point segmentorID-00052 at (6,3) assigned to: near_apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00053 at (6,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00053: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00053 (6,4) manually assigned to loyalists bundle.js:25324:15
🎯 Point segmentorID-00053 at (6,4) assigned to: loyalists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00054 at (6,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00054: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00054 at (6,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🎯 Point segmentorID-00054 at (6,5) assigned to: apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00055 at (6,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00055: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00055 at (6,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00055 at (6,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00056 at (6,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00056: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00056 at (6,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00056 at (6,2) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00057 at (6,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00057: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00057 at (6,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (6,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🎯 Point segmentorID-00057 at (6,3) assigned to: near_apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00058 at (6,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00058: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00058 (6,4) manually assigned to loyalists bundle.js:25324:15
🎯 Point segmentorID-00058 at (6,4) assigned to: loyalists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00059 at (6,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00059: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00059 at (6,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🎯 Point segmentorID-00059 at (6,5) assigned to: apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00060 at (7,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00060: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00060 at (7,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00060 at (7,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00061 at (7,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00061: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00061 at (7,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00061 at (7,2) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00062 at (7,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00062: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00062 at (7,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (7,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🎯 Point segmentorID-00062 at (7,3) assigned to: near_apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00063 at (7,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00063: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00063 at (7,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,4) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🎯 Point segmentorID-00063 at (7,4) assigned to: apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00064 at (7,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00064: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00064 at (7,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🎯 Point segmentorID-00064 at (7,5) assigned to: apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00065 at (7,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00065: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00065 at (7,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00065 at (7,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00066 at (7,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00066: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00066 at (7,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00066 at (7,2) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00067 at (7,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00067: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00067 at (7,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (7,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🎯 Point segmentorID-00067 at (7,3) assigned to: near_apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00068 at (7,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00068: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00068 at (7,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,4) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🎯 Point segmentorID-00068 at (7,4) assigned to: apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00069 at (7,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00069: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00069 at (7,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🎯 Point segmentorID-00069 at (7,5) assigned to: apostles bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00070 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00070: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00070 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00070 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00071 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00071: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00071 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00071 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00072 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00072: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00072 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00072 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00073 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00073: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00073 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00073 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00074 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00074: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00074 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00074 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00075 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00075: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00075 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00075 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00076 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00076: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00076 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00076 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00077 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00077: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00077 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00077 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00078 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00078: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00078 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00078 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00079 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00079: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00079 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🎯 Point segmentorID-00079 at (4,1) assigned to: mercenaries bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00080 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00080: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00080 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00080 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00081 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00081: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00081 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00081 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00082 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00082: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00082 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00082 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00083 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00083: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00083 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00083 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00084 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00084: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00084 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00084 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00085 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00085: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00085 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00085 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00086 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00086: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00086 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00086 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00087 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00087: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00087 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00087 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00088 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00088: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00088 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00088 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00089 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00089: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00089 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00089 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00090 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00090: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00090 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🎯 Point segmentorID-00090 at (2,2) assigned to: terrorists bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00091 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00091: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00091 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00091 at (3,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00092 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00092: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00092 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00092 at (3,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00093 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00093: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00093 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00093 at (3,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00094 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00094: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00094 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00094 at (3,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00095 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00095: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00095 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00095 at (3,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00096 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00096: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00096 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00096 at (3,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00097 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00097: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00097 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00097 at (3,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00098 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00098: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00098 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00098 at (3,4) assigned to: hostages bundle.js:21083:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00099 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00099: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00099 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🎯 Point segmentorID-00099 at (3,4) assigned to: hostages bundle.js:21083:15
📊 Final context-based grouping (EXCLUDES midpoint customers from analytical counting): 
Object { loyalists: 6, mercenaries: 26, hostages: 27, defectors: 4, apostles: 8, near_apostles: 8, terrorists: 19 }
bundle.js:21090:13
📊 Grouped customers: 
Object { loyalists: 6, mercenaries: 26, hostages: 27, defectors: 4, apostles: 8, near_apostles: 8, terrorists: 19 }
bundle.js:20906:13
🚨 About to call analyzeQuadrantProximity methods - threshold: 2 bundle.js:20915:13
🚨 Grouped customers available: 
Object { loyalists: 6, mercenaries: 26 }
bundle.js:20916:13
🔍 analyzeQuadrantProximity: loyalists -> mercenaries | customers: 6 | threshold: 2 bundle.js:21106:13
🔍 DEBUGGING loyalists -> mercenaries: bundle.js:21113:13
   Customer 1: segmentorID-00033 at (4, 4) bundle.js:21115:15
   Customer 2: segmentorID-00034 at (4, 5) bundle.js:21115:15
   Customer 3: segmentorID-00038 at (4, 4) bundle.js:21115:15
   Customer 4: segmentorID-00039 at (4, 5) bundle.js:21115:15
   Customer 5: segmentorID-00053 at (6, 4) bundle.js:21115:15
   Customer 6: segmentorID-00058 at (6, 4) bundle.js:21115:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00033 at (4,4) - sat: true (4 in [4,5,6]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00033 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00033 at (4,4) to hostages boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00033 qualifies for hostages (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00033: isProximity=true, targets=[hostages], looking for mercenaries bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00034 at (4,5) - sat: true (4 in [4,5,6]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00034 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00034 at (4,5) to hostages boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00034 qualifies for hostages (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00034: isProximity=true, targets=[hostages], looking for mercenaries bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00038 at (4,4) - sat: true (4 in [4,5,6]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00038 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00038 at (4,4) to hostages boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00038 qualifies for hostages (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00038: isProximity=true, targets=[hostages], looking for mercenaries bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00039 at (4,5) - sat: true (4 in [4,5,6]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00039 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00039 at (4,5) to hostages boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00039 qualifies for hostages (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00039: isProximity=true, targets=[hostages], looking for mercenaries bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00053 at (6,4) - sat: true (6 in [4,5,6]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00053 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00053 at (6,4) - sat: false (6 in [4,5]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00053 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00053: isProximity=false, targets=[], looking for mercenaries bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00058 at (6,4) - sat: true (6 in [4,5,6]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00058 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00058 at (6,4) - sat: false (6 in [4,5]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00058 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00058: isProximity=false, targets=[], looking for mercenaries bundle.js:21124:15
📊 FINAL RESULT for loyalists -> mercenaries: 0 customers, 0 positions bundle.js:21149:13
🔍 analyzeQuadrantProximity: loyalists -> hostages | customers: 6 | threshold: 2 bundle.js:21106:13
🔍 DEBUGGING loyalists -> hostages: bundle.js:21113:13
   Customer 1: segmentorID-00033 at (4, 4) bundle.js:21115:15
   Customer 2: segmentorID-00034 at (4, 5) bundle.js:21115:15
   Customer 3: segmentorID-00038 at (4, 4) bundle.js:21115:15
   Customer 4: segmentorID-00039 at (4, 5) bundle.js:21115:15
   Customer 5: segmentorID-00053 at (6, 4) bundle.js:21115:15
   Customer 6: segmentorID-00058 at (6, 4) bundle.js:21115:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00033 at (4,4) - sat: true (4 in [4,5,6]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00033 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00033 at (4,4) to hostages boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00033 qualifies for hostages (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00033: isProximity=true, targets=[hostages], looking for hostages bundle.js:21124:15
   ✅ Customer segmentorID-00033 matches proximity criteria for hostages bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00034 at (4,5) - sat: true (4 in [4,5,6]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00034 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00034 at (4,5) to hostages boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00034 qualifies for hostages (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00034: isProximity=true, targets=[hostages], looking for hostages bundle.js:21124:15
   ✅ Customer segmentorID-00034 matches proximity criteria for hostages bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00038 at (4,4) - sat: true (4 in [4,5,6]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00038 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00038 at (4,4) to hostages boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00038 qualifies for hostages (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00038: isProximity=true, targets=[hostages], looking for hostages bundle.js:21124:15
   ✅ Customer segmentorID-00038 matches proximity criteria for hostages bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00039 at (4,5) - sat: true (4 in [4,5,6]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00039 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00039 at (4,5) to hostages boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00039 qualifies for hostages (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00039: isProximity=true, targets=[hostages], looking for hostages bundle.js:21124:15
   ✅ Customer segmentorID-00039 matches proximity criteria for hostages bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00053 at (6,4) - sat: true (6 in [4,5,6]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00053 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00053 at (6,4) - sat: false (6 in [4,5]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00053 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00053: isProximity=false, targets=[], looking for hostages bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=mercenaries, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00058 at (6,4) - sat: true (6 in [4,5,6]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00058 not in potential search area for mercenaries bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=loyalists, toQuadrant=hostages, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00058 at (6,4) - sat: false (6 in [4,5]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00058 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00058: isProximity=false, targets=[], looking for hostages bundle.js:21124:15
📊 FINAL RESULT for loyalists -> hostages: 4 customers, 2 positions bundle.js:21149:13
🔍 analyzeQuadrantProximity: mercenaries -> loyalists | customers: 26 | threshold: 2 bundle.js:21106:13
🔍 DEBUGGING mercenaries -> loyalists: bundle.js:21113:13
   Customer 1: segmentorID-00030 at (4, 1) bundle.js:21115:15
   Customer 2: segmentorID-00031 at (4, 2) bundle.js:21115:15
   Customer 3: segmentorID-00035 at (4, 1) bundle.js:21115:15
   Customer 4: segmentorID-00036 at (4, 2) bundle.js:21115:15
   Customer 5: segmentorID-00040 at (5, 1) bundle.js:21115:15
   Customer 6: segmentorID-00041 at (5, 2) bundle.js:21115:15
   Customer 7: segmentorID-00045 at (5, 1) bundle.js:21115:15
   Customer 8: segmentorID-00046 at (5, 2) bundle.js:21115:15
   Customer 9: segmentorID-00050 at (6, 1) bundle.js:21115:15
   Customer 10: segmentorID-00051 at (6, 2) bundle.js:21115:15
   Customer 11: segmentorID-00055 at (6, 1) bundle.js:21115:15
   Customer 12: segmentorID-00056 at (6, 2) bundle.js:21115:15
   Customer 13: segmentorID-00060 at (7, 1) bundle.js:21115:15
   Customer 14: segmentorID-00061 at (7, 2) bundle.js:21115:15
   Customer 15: segmentorID-00065 at (7, 1) bundle.js:21115:15
   Customer 16: segmentorID-00066 at (7, 2) bundle.js:21115:15
   Customer 17: segmentorID-00070 at (4, 1) bundle.js:21115:15
   Customer 18: segmentorID-00071 at (4, 1) bundle.js:21115:15
   Customer 19: segmentorID-00072 at (4, 1) bundle.js:21115:15
   Customer 20: segmentorID-00073 at (4, 1) bundle.js:21115:15
   Customer 21: segmentorID-00074 at (4, 1) bundle.js:21115:15
   Customer 22: segmentorID-00075 at (4, 1) bundle.js:21115:15
   Customer 23: segmentorID-00076 at (4, 1) bundle.js:21115:15
   Customer 24: segmentorID-00077 at (4, 1) bundle.js:21115:15
   Customer 25: segmentorID-00078 at (4, 1) bundle.js:21115:15
   Customer 26: segmentorID-00079 at (4, 1) bundle.js:21115:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00030 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00030 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00030 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00030 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00030: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00031 at (4,2) - sat: true (4 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00031 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00031 at (4,2) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00031 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00031: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00035 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00035 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00035 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00035 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00035: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00036 at (4,2) - sat: true (4 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00036 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00036 at (4,2) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00036 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00036: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00040 at (5,1) - sat: true (5 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00040 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00040 at (5,1) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00040 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00040: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00041 at (5,2) - sat: true (5 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00041 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00041 at (5,2) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00041 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00041: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00045 at (5,1) - sat: true (5 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00045 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00045 at (5,1) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00045 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00045: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00046 at (5,2) - sat: true (5 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00046 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00046 at (5,2) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00046 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00046: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00050 at (6,1) - sat: true (6 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00050 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00050 at (6,1) - sat: false (6 in [4,5]), loy: true (1 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00050 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00050: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00051 at (6,2) - sat: true (6 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00051 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00051 at (6,2) - sat: false (6 in [4,5]), loy: true (2 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00051 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00051: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00055 at (6,1) - sat: true (6 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00055 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00055 at (6,1) - sat: false (6 in [4,5]), loy: true (1 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00055 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00055: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00056 at (6,2) - sat: true (6 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00056 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00056 at (6,2) - sat: false (6 in [4,5]), loy: true (2 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00056 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00056: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00060 at (7,1) - sat: false (7 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00060 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00060 at (7,1) - sat: false (7 in [4,5]), loy: true (1 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00060 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00060: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00061 at (7,2) - sat: false (7 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00061 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00061 at (7,2) - sat: false (7 in [4,5]), loy: true (2 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00061 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00061: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00065 at (7,1) - sat: false (7 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00065 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00065 at (7,1) - sat: false (7 in [4,5]), loy: true (1 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00065 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00065: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00066 at (7,2) - sat: false (7 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00066 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00066 at (7,2) - sat: false (7 in [4,5]), loy: true (2 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00066 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00066: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00070 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00070 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00070 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00070 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00070: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00071 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00071 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00071 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00071 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00071: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00072 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00072 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00072 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00072 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00072: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00073 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00073 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00073 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00073 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00073: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00074 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00074 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00074 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00074 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00074: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00075 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00075 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00075 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00075 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00075: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00076 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00076 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00076 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00076 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00076: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00077 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00077 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00077 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00077 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00077: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00078 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00078 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00078 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00078 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00078: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00079 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00079 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00079 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00079 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00079: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
📊 FINAL RESULT for mercenaries -> loyalists: 0 customers, 0 positions bundle.js:21149:13
🔍 analyzeQuadrantProximity: mercenaries -> defectors | customers: 26 | threshold: 2 bundle.js:21106:13
🔍 DEBUGGING mercenaries -> defectors: bundle.js:21113:13
   Customer 1: segmentorID-00030 at (4, 1) bundle.js:21115:15
   Customer 2: segmentorID-00031 at (4, 2) bundle.js:21115:15
   Customer 3: segmentorID-00035 at (4, 1) bundle.js:21115:15
   Customer 4: segmentorID-00036 at (4, 2) bundle.js:21115:15
   Customer 5: segmentorID-00040 at (5, 1) bundle.js:21115:15
   Customer 6: segmentorID-00041 at (5, 2) bundle.js:21115:15
   Customer 7: segmentorID-00045 at (5, 1) bundle.js:21115:15
   Customer 8: segmentorID-00046 at (5, 2) bundle.js:21115:15
   Customer 9: segmentorID-00050 at (6, 1) bundle.js:21115:15
   Customer 10: segmentorID-00051 at (6, 2) bundle.js:21115:15
   Customer 11: segmentorID-00055 at (6, 1) bundle.js:21115:15
   Customer 12: segmentorID-00056 at (6, 2) bundle.js:21115:15
   Customer 13: segmentorID-00060 at (7, 1) bundle.js:21115:15
   Customer 14: segmentorID-00061 at (7, 2) bundle.js:21115:15
   Customer 15: segmentorID-00065 at (7, 1) bundle.js:21115:15
   Customer 16: segmentorID-00066 at (7, 2) bundle.js:21115:15
   Customer 17: segmentorID-00070 at (4, 1) bundle.js:21115:15
   Customer 18: segmentorID-00071 at (4, 1) bundle.js:21115:15
   Customer 19: segmentorID-00072 at (4, 1) bundle.js:21115:15
   Customer 20: segmentorID-00073 at (4, 1) bundle.js:21115:15
   Customer 21: segmentorID-00074 at (4, 1) bundle.js:21115:15
   Customer 22: segmentorID-00075 at (4, 1) bundle.js:21115:15
   Customer 23: segmentorID-00076 at (4, 1) bundle.js:21115:15
   Customer 24: segmentorID-00077 at (4, 1) bundle.js:21115:15
   Customer 25: segmentorID-00078 at (4, 1) bundle.js:21115:15
   Customer 26: segmentorID-00079 at (4, 1) bundle.js:21115:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00030 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00030 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00030 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00030 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00030: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00030 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00031 at (4,2) - sat: true (4 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00031 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00031 at (4,2) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00031 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00031: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00031 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00035 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00035 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00035 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00035 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00035: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00035 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00036 at (4,2) - sat: true (4 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00036 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00036 at (4,2) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00036 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00036: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00036 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00040 at (5,1) - sat: true (5 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00040 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00040 at (5,1) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00040 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00040: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00040 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00041 at (5,2) - sat: true (5 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00041 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00041 at (5,2) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00041 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00041: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00041 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00045 at (5,1) - sat: true (5 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00045 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00045 at (5,1) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00045 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00045: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00045 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00046 at (5,2) - sat: true (5 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00046 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00046 at (5,2) to defectors boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00046 qualifies for defectors (distance: 1) bundle.js:22411:19
   🔍 Customer segmentorID-00046: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00046 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00050 at (6,1) - sat: true (6 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00050 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00050 at (6,1) - sat: false (6 in [4,5]), loy: true (1 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00050 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00050: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00051 at (6,2) - sat: true (6 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00051 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00051 at (6,2) - sat: false (6 in [4,5]), loy: true (2 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00051 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00051: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00055 at (6,1) - sat: true (6 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00055 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00055 at (6,1) - sat: false (6 in [4,5]), loy: true (1 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00055 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00055: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00056 at (6,2) - sat: true (6 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00056 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00056 at (6,2) - sat: false (6 in [4,5]), loy: true (2 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00056 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00056: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00060 at (7,1) - sat: false (7 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00060 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00060 at (7,1) - sat: false (7 in [4,5]), loy: true (1 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00060 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00060: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00061 at (7,2) - sat: false (7 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00061 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00061 at (7,2) - sat: false (7 in [4,5]), loy: true (2 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00061 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00061: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00065 at (7,1) - sat: false (7 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00065 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00065 at (7,1) - sat: false (7 in [4,5]), loy: true (1 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00065 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00065: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00066 at (7,2) - sat: false (7 in [4,5,6]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00066 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00066 at (7,2) - sat: false (7 in [4,5]), loy: true (2 in [1,2,3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00066 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00066: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00070 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00070 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00070 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00070 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00070: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00070 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00071 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00071 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00071 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00071 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00071: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00071 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00072 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00072 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00072 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00072 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00072: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00072 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00073 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00073 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00073 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00073 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00073: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00073 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00074 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00074 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00074 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00074 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00074: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00074 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00075 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00075 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00075 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00075 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00075: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00075 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00076 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00076 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00076 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00076 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00076: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00076 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00077 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00077 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00077 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00077 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00077: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00077 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00078 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00078 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00078 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00078 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00078: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00078 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=loyalists, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[4,5,6] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5,6], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00079 at (4,1) - sat: true (4 in [4,5,6]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00079 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=mercenaries, toQuadrant=defectors, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,5], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,5], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00079 at (4,1) to defectors boundary = 2 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00079 qualifies for defectors (distance: 2) bundle.js:22411:19
   🔍 Customer segmentorID-00079: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00079 matches proximity criteria for defectors bundle.js:21128:17
📊 FINAL RESULT for mercenaries -> defectors: 18 customers, 4 positions bundle.js:21149:13
🔍 analyzeQuadrantProximity: hostages -> loyalists | customers: 27 | threshold: 2 bundle.js:21106:13
🔍 DEBUGGING hostages -> loyalists: bundle.js:21113:13
   Customer 1: segmentorID-00002 at (1, 3) bundle.js:21115:15
   Customer 2: segmentorID-00003 at (1, 4) bundle.js:21115:15
   Customer 3: segmentorID-00004 at (1, 5) bundle.js:21115:15
   Customer 4: segmentorID-00007 at (1, 3) bundle.js:21115:15
   Customer 5: segmentorID-00008 at (1, 4) bundle.js:21115:15
   Customer 6: segmentorID-00009 at (1, 5) bundle.js:21115:15
   Customer 7: segmentorID-00012 at (2, 3) bundle.js:21115:15
   Customer 8: segmentorID-00013 at (2, 4) bundle.js:21115:15
   Customer 9: segmentorID-00014 at (2, 5) bundle.js:21115:15
   Customer 10: segmentorID-00017 at (2, 3) bundle.js:21115:15
   Customer 11: segmentorID-00018 at (2, 4) bundle.js:21115:15
   Customer 12: segmentorID-00019 at (2, 5) bundle.js:21115:15
   Customer 13: segmentorID-00022 at (3, 3) bundle.js:21115:15
   Customer 14: segmentorID-00023 at (3, 4) bundle.js:21115:15
   Customer 15: segmentorID-00024 at (3, 5) bundle.js:21115:15
   Customer 16: segmentorID-00027 at (3, 3) bundle.js:21115:15
   Customer 17: segmentorID-00028 at (3, 4) bundle.js:21115:15
   Customer 18: segmentorID-00029 at (3, 5) bundle.js:21115:15
   Customer 19: segmentorID-00091 at (3, 4) bundle.js:21115:15
   Customer 20: segmentorID-00092 at (3, 4) bundle.js:21115:15
   Customer 21: segmentorID-00093 at (3, 4) bundle.js:21115:15
   Customer 22: segmentorID-00094 at (3, 4) bundle.js:21115:15
   Customer 23: segmentorID-00095 at (3, 4) bundle.js:21115:15
   Customer 24: segmentorID-00096 at (3, 4) bundle.js:21115:15
   Customer 25: segmentorID-00097 at (3, 4) bundle.js:21115:15
   Customer 26: segmentorID-00098 at (3, 4) bundle.js:21115:15
   Customer 27: segmentorID-00099 at (3, 4) bundle.js:21115:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00002 at (1,3) - sat: false (1 in [4,3]), loy: true (3 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00002 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00002 at (1,3) - sat: false (1 in [2,3,4]), loy: true (3 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00002 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00002: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00003 at (1,4) - sat: false (1 in [4,3]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00003 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00003 at (1,4) - sat: false (1 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00003 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00003: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00004 at (1,5) - sat: false (1 in [4,3]), loy: true (5 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00004 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00004 at (1,5) - sat: false (1 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00004 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00004: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00007 at (1,3) - sat: false (1 in [4,3]), loy: true (3 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00007 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00007 at (1,3) - sat: false (1 in [2,3,4]), loy: true (3 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00007 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00007: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00008 at (1,4) - sat: false (1 in [4,3]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00008 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00008 at (1,4) - sat: false (1 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00008 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00008: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00009 at (1,5) - sat: false (1 in [4,3]), loy: true (5 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00009 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00009 at (1,5) - sat: false (1 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00009 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00009: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00012 at (2,3) - sat: false (2 in [4,3]), loy: true (3 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00012 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00012 at (2,3) to defectors boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00012 qualifies for defectors (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00012: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00013 at (2,4) - sat: false (2 in [4,3]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00013 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00013 at (2,4) - sat: true (2 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00013 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00013: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00014 at (2,5) - sat: false (2 in [4,3]), loy: true (5 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00014 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00014 at (2,5) - sat: true (2 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00014 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00014: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00017 at (2,3) - sat: false (2 in [4,3]), loy: true (3 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00017 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00017 at (2,3) to defectors boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00017 qualifies for defectors (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00017: isProximity=true, targets=[defectors], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00018 at (2,4) - sat: false (2 in [4,3]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00018 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00018 at (2,4) - sat: true (2 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00018 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00018: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00019 at (2,5) - sat: false (2 in [4,3]), loy: true (5 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00019 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00019 at (2,5) - sat: true (2 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00019 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00019: isProximity=false, targets=[], looking for loyalists bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00022 at (3,3) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00022 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00022 at (3,3) to defectors boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00022 qualifies for defectors (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00022: isProximity=true, targets=[loyalists, defectors], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00022 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00023 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00023 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00023 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00023 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00023: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00023 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00024 at (3,5) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00024 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00024 at (3,5) - sat: true (3 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00024 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00024: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00024 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00027 at (3,3) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00027 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00027 at (3,3) to defectors boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00027 qualifies for defectors (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00027: isProximity=true, targets=[loyalists, defectors], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00027 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00028 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00028 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00028 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00028 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00028: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00028 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00029 at (3,5) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00029 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00029 at (3,5) - sat: true (3 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00029 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00029: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00029 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00091 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00091 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00091 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00091 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00091: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00091 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00092 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00092 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00092 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00092 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00092: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00092 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00093 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00093 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00093 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00093 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00093: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00093 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00094 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00094 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00094 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00094 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00094: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00094 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00095 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00095 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00095 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00095 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00095: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00095 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00096 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00096 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00096 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00096 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00096: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00096 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00097 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00097 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00097 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00097 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00097: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00097 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00098 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00098 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00098 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00098 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00098: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00098 matches proximity criteria for loyalists bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00099 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00099 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00099 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00099 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00099: isProximity=true, targets=[loyalists], looking for loyalists bundle.js:21124:15
   ✅ Customer segmentorID-00099 matches proximity criteria for loyalists bundle.js:21128:17
📊 FINAL RESULT for hostages -> loyalists: 15 customers, 3 positions bundle.js:21149:13
🔍 analyzeQuadrantProximity: hostages -> defectors | customers: 27 | threshold: 2 bundle.js:21106:13
🔍 DEBUGGING hostages -> defectors: bundle.js:21113:13
   Customer 1: segmentorID-00002 at (1, 3) bundle.js:21115:15
   Customer 2: segmentorID-00003 at (1, 4) bundle.js:21115:15
   Customer 3: segmentorID-00004 at (1, 5) bundle.js:21115:15
   Customer 4: segmentorID-00007 at (1, 3) bundle.js:21115:15
   Customer 5: segmentorID-00008 at (1, 4) bundle.js:21115:15
   Customer 6: segmentorID-00009 at (1, 5) bundle.js:21115:15
   Customer 7: segmentorID-00012 at (2, 3) bundle.js:21115:15
   Customer 8: segmentorID-00013 at (2, 4) bundle.js:21115:15
   Customer 9: segmentorID-00014 at (2, 5) bundle.js:21115:15
   Customer 10: segmentorID-00017 at (2, 3) bundle.js:21115:15
   Customer 11: segmentorID-00018 at (2, 4) bundle.js:21115:15
   Customer 12: segmentorID-00019 at (2, 5) bundle.js:21115:15
   Customer 13: segmentorID-00022 at (3, 3) bundle.js:21115:15
   Customer 14: segmentorID-00023 at (3, 4) bundle.js:21115:15
   Customer 15: segmentorID-00024 at (3, 5) bundle.js:21115:15
   Customer 16: segmentorID-00027 at (3, 3) bundle.js:21115:15
   Customer 17: segmentorID-00028 at (3, 4) bundle.js:21115:15
   Customer 18: segmentorID-00029 at (3, 5) bundle.js:21115:15
   Customer 19: segmentorID-00091 at (3, 4) bundle.js:21115:15
   Customer 20: segmentorID-00092 at (3, 4) bundle.js:21115:15
   Customer 21: segmentorID-00093 at (3, 4) bundle.js:21115:15
   Customer 22: segmentorID-00094 at (3, 4) bundle.js:21115:15
   Customer 23: segmentorID-00095 at (3, 4) bundle.js:21115:15
   Customer 24: segmentorID-00096 at (3, 4) bundle.js:21115:15
   Customer 25: segmentorID-00097 at (3, 4) bundle.js:21115:15
   Customer 26: segmentorID-00098 at (3, 4) bundle.js:21115:15
   Customer 27: segmentorID-00099 at (3, 4) bundle.js:21115:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00002 at (1,3) - sat: false (1 in [4,3]), loy: true (3 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00002 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00002 at (1,3) - sat: false (1 in [2,3,4]), loy: true (3 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00002 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00002: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00003 at (1,4) - sat: false (1 in [4,3]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00003 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00003 at (1,4) - sat: false (1 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00003 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00003: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00004 at (1,5) - sat: false (1 in [4,3]), loy: true (5 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00004 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00004 at (1,5) - sat: false (1 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00004 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00004: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00007 at (1,3) - sat: false (1 in [4,3]), loy: true (3 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00007 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00007 at (1,3) - sat: false (1 in [2,3,4]), loy: true (3 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00007 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00007: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00008 at (1,4) - sat: false (1 in [4,3]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00008 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00008 at (1,4) - sat: false (1 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00008 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00008: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00009 at (1,5) - sat: false (1 in [4,3]), loy: true (5 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00009 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00009 at (1,5) - sat: false (1 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00009 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00009: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00012 at (2,3) - sat: false (2 in [4,3]), loy: true (3 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00012 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00012 at (2,3) to defectors boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00012 qualifies for defectors (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00012: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00012 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00013 at (2,4) - sat: false (2 in [4,3]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00013 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00013 at (2,4) - sat: true (2 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00013 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00013: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00014 at (2,5) - sat: false (2 in [4,3]), loy: true (5 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00014 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00014 at (2,5) - sat: true (2 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00014 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00014: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00017 at (2,3) - sat: false (2 in [4,3]), loy: true (3 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00017 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00017 at (2,3) to defectors boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00017 qualifies for defectors (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00017: isProximity=true, targets=[defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00017 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00018 at (2,4) - sat: false (2 in [4,3]), loy: true (4 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00018 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00018 at (2,4) - sat: true (2 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00018 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00018: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00019 at (2,5) - sat: false (2 in [4,3]), loy: true (5 in [3,4,5]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00019 not in potential search area for loyalists bundle.js:22416:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00019 at (2,5) - sat: true (2 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00019 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00019: isProximity=false, targets=[], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00022 at (3,3) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00022 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00022 at (3,3) to defectors boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00022 qualifies for defectors (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00022: isProximity=true, targets=[loyalists, defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00022 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00023 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00023 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00023 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00023 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00023: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00024 at (3,5) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00024 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00024 at (3,5) - sat: true (3 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00024 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00024: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00027 at (3,3) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00027 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00027 at (3,3) to defectors boundary = 0 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00027 qualifies for defectors (distance: 0) bundle.js:22411:19
   🔍 Customer segmentorID-00027: isProximity=true, targets=[loyalists, defectors], looking for defectors bundle.js:21124:15
   ✅ Customer segmentorID-00027 matches proximity criteria for defectors bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00028 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00028 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00028 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00028 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00028: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00029 at (3,5) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00029 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00029 at (3,5) - sat: true (3 in [2,3,4]), loy: false (5 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00029 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00029: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00091 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00091 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00091 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00091 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00091: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00092 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00092 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00092 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00092 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00092: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00093 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00093 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00093 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00093 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00093: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00094 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00094 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00094 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00094 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00094: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00095 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00095 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00095 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00095 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00095: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00096 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00096 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00096 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00096 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00096: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00097 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00097 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00097 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00097 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00097: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00098 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00098 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00098 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00098 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00098: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=loyalists, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[3,4,5] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[3,4,5] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00099 at (3,4) to loyalists boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00099 qualifies for loyalists (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=hostages, toQuadrant=defectors, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00099 at (3,4) - sat: true (3 in [2,3,4]), loy: false (4 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00099 not in potential search area for defectors bundle.js:22416:17
   🔍 Customer segmentorID-00099: isProximity=true, targets=[loyalists], looking for defectors bundle.js:21124:15
📊 FINAL RESULT for hostages -> defectors: 4 customers, 2 positions bundle.js:21149:13
🔍 analyzeQuadrantProximity: defectors -> mercenaries | customers: 4 | threshold: 2 bundle.js:21106:13
🔍 DEBUGGING defectors -> mercenaries: bundle.js:21113:13
   Customer 1: segmentorID-00020 at (3, 1) bundle.js:21115:15
   Customer 2: segmentorID-00021 at (3, 2) bundle.js:21115:15
   Customer 3: segmentorID-00025 at (3, 1) bundle.js:21115:15
   Customer 4: segmentorID-00026 at (3, 2) bundle.js:21115:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=mercenaries, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00020 at (3,1) to mercenaries boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00020 qualifies for mercenaries (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=hostages, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00020 at (3,1) - sat: true (3 in [2,3,4]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00020 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00020: isProximity=true, targets=[mercenaries], looking for mercenaries bundle.js:21124:15
   ✅ Customer segmentorID-00020 matches proximity criteria for mercenaries bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=mercenaries, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00021 at (3,2) to mercenaries boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00021 qualifies for mercenaries (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=hostages, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00021 at (3,2) - sat: true (3 in [2,3,4]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00021 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00021: isProximity=true, targets=[mercenaries], looking for mercenaries bundle.js:21124:15
   ✅ Customer segmentorID-00021 matches proximity criteria for mercenaries bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=mercenaries, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00025 at (3,1) to mercenaries boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00025 qualifies for mercenaries (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=hostages, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00025 at (3,1) - sat: true (3 in [2,3,4]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00025 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00025: isProximity=true, targets=[mercenaries], looking for mercenaries bundle.js:21124:15
   ✅ Customer segmentorID-00025 matches proximity criteria for mercenaries bundle.js:21128:17
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=mercenaries, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00026 at (3,2) to mercenaries boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00026 qualifies for mercenaries (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=hostages, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00026 at (3,2) - sat: true (3 in [2,3,4]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00026 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00026: isProximity=true, targets=[mercenaries], looking for mercenaries bundle.js:21124:15
   ✅ Customer segmentorID-00026 matches proximity criteria for mercenaries bundle.js:21128:17
📊 FINAL RESULT for defectors -> mercenaries: 4 customers, 2 positions bundle.js:21149:13
🔍 analyzeQuadrantProximity: defectors -> hostages | customers: 4 | threshold: 2 bundle.js:21106:13
🔍 DEBUGGING defectors -> hostages: bundle.js:21113:13
   Customer 1: segmentorID-00020 at (3, 1) bundle.js:21115:15
   Customer 2: segmentorID-00021 at (3, 2) bundle.js:21115:15
   Customer 3: segmentorID-00025 at (3, 1) bundle.js:21115:15
   Customer 4: segmentorID-00026 at (3, 2) bundle.js:21115:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=mercenaries, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00020 at (3,1) to mercenaries boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00020 qualifies for mercenaries (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=hostages, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00020 at (3,1) - sat: true (3 in [2,3,4]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00020 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00020: isProximity=true, targets=[mercenaries], looking for hostages bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=mercenaries, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00021 at (3,2) to mercenaries boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00021 qualifies for mercenaries (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=hostages, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00021 at (3,2) - sat: true (3 in [2,3,4]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00021 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00021: isProximity=true, targets=[mercenaries], looking for hostages bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=mercenaries, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00025 at (3,1) to mercenaries boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00025 qualifies for mercenaries (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=hostages, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00025 at (3,1) - sat: true (3 in [2,3,4]), loy: false (1 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00025 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00025: isProximity=true, targets=[mercenaries], looking for hostages bundle.js:21124:15
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=mercenaries, relevantDimension=sat bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[4,3], irrelevantPositions=[1,2,3] bundle.js:22293:13
   📏 Lateral search area: sat=[4,3], loy=[1,2,3] bundle.js:22294:13
   📏 LATERAL DISTANCE: Customer segmentorID-00026 at (3,2) to mercenaries boundary = 1 bundle.js:22405:17
   ✅ LATERAL PROXIMITY: Customer segmentorID-00026 qualifies for mercenaries (distance: 1) bundle.js:22411:19
   📏 Lateral potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:22291:13
   📏 Lateral debug: fromQuadrant=defectors, toQuadrant=hostages, relevantDimension=loy bundle.js:22292:13
   📏 Lateral debug: relevantPositions=[3], irrelevantPositions=[2,3,4] bundle.js:22293:13
   📏 Lateral search area: sat=[2,3,4], loy=[3] bundle.js:22294:13
   📏 Lateral search area check: segmentorID-00026 at (3,2) - sat: true (3 in [2,3,4]), loy: false (2 in [3]) bundle.js:22363:15
   ❌ LATERAL SEARCH AREA: Customer segmentorID-00026 not in potential search area for hostages bundle.js:22416:17
   🔍 Customer segmentorID-00026: isProximity=true, targets=[mercenaries], looking for hostages bundle.js:21124:15
📊 FINAL RESULT for defectors -> hostages: 0 customers, 0 positions bundle.js:21149:13
🔥🔥🔥 CALLING analyzeDiagonalProximity: loyalists -> defectors bundle.js:20933:17
🔍 Diagonal analysis: loyalists -> defectors (6 customers) bundle.js:21176:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00000 at (1,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00000: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00000 at (1,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00001 at (1,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00001: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00001 at (1,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00002 at (1,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00002: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00002 at (1,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00003 at (1,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00003: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00003 at (1,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00004 at (1,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00004: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00004 at (1,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00005 at (1,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00005: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00005 at (1,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00006 at (1,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00006: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00006 at (1,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00007 at (1,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00007: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00007 at (1,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00008 at (1,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00008: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00008 at (1,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00009 at (1,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00009: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00009 at (1,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00010 at (2,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00010: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00010 at (2,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00011 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00011: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00011 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00012 at (2,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00012: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00012 at (2,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00013 at (2,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00013: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00013 at (2,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00014 at (2,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00014: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00014 at (2,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00015 at (2,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00015: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00015 at (2,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00016 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00016: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00016 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00017 at (2,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00017: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00017 at (2,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00018 at (2,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00018: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00018 at (2,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00019 at (2,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00019: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00019 at (2,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00020 at (3,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00020: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00020 at (3,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,1) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00021 at (3,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00021: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00021 at (3,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,2) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00022 at (3,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00022: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00022 at (3,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00023 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00023: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00023 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00024 at (3,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00024: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00024 at (3,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00025 at (3,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00025: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00025 at (3,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,1) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00026 at (3,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00026: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00026 at (3,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,2) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00027 at (3,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00027: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00027 at (3,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00028 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00028: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00028 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00029 at (3,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00029: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00029 at (3,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00030 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00030: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00030 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00031 at (4,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00031: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00031 at (4,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00033 at (4,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00033: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00033 at (4,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,4) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
✅ DIAGONAL: Customer segmentorID-00033 at (4,4) belongs to loyalists (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00034 at (4,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00034: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00034 at (4,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,5) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
✅ DIAGONAL: Customer segmentorID-00034 at (4,5) belongs to loyalists (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00035 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00035: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00035 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00036 at (4,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00036: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00036 at (4,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00038 at (4,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00038: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00038 at (4,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,4) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
✅ DIAGONAL: Customer segmentorID-00038 at (4,4) belongs to loyalists (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00039 at (4,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00039: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00039 at (4,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,5) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
✅ DIAGONAL: Customer segmentorID-00039 at (4,5) belongs to loyalists (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00040 at (5,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00040: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00040 at (5,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00041 at (5,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00041: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00041 at (5,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00042 at (5,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00042: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00042 at (5,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,3) -> NEAR-APOSTLES (corner): sat=5, loy=3 bundle.js:25238:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00043 at (5,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00043: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00043 (5,4) manually assigned to apostles bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00044 at (5,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00044: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00044 at (5,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,5) -> NEAR-APOSTLES (left edge): sat in [5,6), loy>=4 bundle.js:25226:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00045 at (5,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00045: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00045 at (5,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00046 at (5,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00046: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00046 at (5,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00047 at (5,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00047: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00047 at (5,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,3) -> NEAR-APOSTLES (corner): sat=5, loy=3 bundle.js:25238:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00048 at (5,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00048: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00048 (5,4) manually assigned to apostles bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00049 at (5,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00049: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00049 at (5,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,5) -> NEAR-APOSTLES (left edge): sat in [5,6), loy>=4 bundle.js:25226:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00050 at (6,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00050: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00050 at (6,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00051 at (6,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00051: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00051 at (6,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00052 at (6,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00052: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00052 at (6,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (6,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00053 at (6,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00053: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00053 (6,4) manually assigned to loyalists bundle.js:25324:15
✅ DIAGONAL: Customer segmentorID-00053 at (6,4) belongs to loyalists (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00054 at (6,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00054: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00054 at (6,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00055 at (6,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00055: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00055 at (6,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00056 at (6,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00056: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00056 at (6,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00057 at (6,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00057: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00057 at (6,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (6,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00058 at (6,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00058: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00058 (6,4) manually assigned to loyalists bundle.js:25324:15
✅ DIAGONAL: Customer segmentorID-00058 at (6,4) belongs to loyalists (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00059 at (6,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00059: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00059 at (6,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00060 at (7,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00060: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00060 at (7,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00061 at (7,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00061: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00061 at (7,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00062 at (7,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00062: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00062 at (7,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (7,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00063 at (7,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00063: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00063 at (7,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,4) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00064 at (7,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00064: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00064 at (7,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00065 at (7,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00065: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00065 at (7,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00066 at (7,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00066: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00066 at (7,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00067 at (7,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00067: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00067 at (7,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (7,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00068 at (7,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00068: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00068 at (7,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,4) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00069 at (7,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00069: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00069 at (7,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00070 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00070: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00070 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00071 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00071: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00071 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00072 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00072: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00072 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00073 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00073: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00073 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00074 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00074: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00074 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00075 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00075: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00075 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00076 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00076: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00076 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00077 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00077: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00077 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00078 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00078: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00078 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00079 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00079: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00079 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00080 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00080: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00080 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00081 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00081: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00081 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00082 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00082: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00082 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00083 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00083: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00083 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00084 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00084: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00084 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00085 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00085: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00085 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00086 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00086: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00086 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00087 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00087: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00087 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00088 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00088: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00088 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00089 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00089: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00089 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00090 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00090: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00090 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00091 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00091: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00091 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00092 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00092: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00092 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00093 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00093: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00093 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00094 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00094: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00094 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00095 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00095: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00095 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00096 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00096: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00096 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00097 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00097: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00097 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00098 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00098: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00098 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00099 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00099: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00099 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00033 at (4,4) to defectors boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00033 at (4,4) - sat: true (4 in [4,5]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00033 at (4,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00034 at (4,5) to defectors boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00034 at (4,5) - sat: true (4 in [4,5]), loy: false (5 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00034 at (4,5) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00038 at (4,4) to defectors boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00038 at (4,4) - sat: true (4 in [4,5]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00038 at (4,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00039 at (4,5) to defectors boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00039 at (4,5) - sat: true (4 in [4,5]), loy: false (5 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00039 at (4,5) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00053 at (6,4) to defectors boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00053 at (6,4) - sat: false (6 in [4,5]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00053 at (6,4) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00058 at (6,4) to defectors boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00058 at (6,4) - sat: false (6 in [4,5]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00058 at (6,4) meets distance (2) but fails search area bundle.js:21217:17
   - Qualifying customers: 0 bundle.js:21247:13
🔥🔥🔥 CALLING analyzeDiagonalProximity: mercenaries -> hostages bundle.js:20937:17
🔍 Diagonal analysis: mercenaries -> hostages (26 customers) bundle.js:21176:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00000 at (1,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00000: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00000 at (1,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00001 at (1,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00001: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00001 at (1,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00002 at (1,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00002: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00002 at (1,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00003 at (1,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00003: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00003 at (1,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00004 at (1,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00004: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00004 at (1,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00005 at (1,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00005: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00005 at (1,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00006 at (1,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00006: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00006 at (1,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00007 at (1,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00007: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00007 at (1,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00008 at (1,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00008: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00008 at (1,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00009 at (1,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00009: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00009 at (1,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00010 at (2,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00010: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00010 at (2,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00011 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00011: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00011 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00012 at (2,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00012: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00012 at (2,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00013 at (2,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00013: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00013 at (2,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00014 at (2,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00014: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00014 at (2,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00015 at (2,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00015: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00015 at (2,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00016 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00016: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00016 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00017 at (2,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00017: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00017 at (2,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00018 at (2,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00018: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00018 at (2,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00019 at (2,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00019: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00019 at (2,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00020 at (3,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00020: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00020 at (3,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,1) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00021 at (3,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00021: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00021 at (3,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,2) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00022 at (3,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00022: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00022 at (3,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00023 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00023: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00023 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00024 at (3,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00024: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00024 at (3,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00025 at (3,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00025: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00025 at (3,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,1) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00026 at (3,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00026: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00026 at (3,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,2) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00027 at (3,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00027: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00027 at (3,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00028 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00028: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00028 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00029 at (3,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00029: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00029 at (3,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00030 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00030: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00030 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00030 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00031 at (4,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00031: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00031 at (4,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00031 at (4,2) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00033 at (4,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00033: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00033 at (4,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,4) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00034 at (4,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00034: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00034 at (4,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,5) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00035 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00035: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00035 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00035 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00036 at (4,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00036: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00036 at (4,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00036 at (4,2) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00038 at (4,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00038: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00038 at (4,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,4) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00039 at (4,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00039: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00039 at (4,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,5) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00040 at (5,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00040: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00040 at (5,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00040 at (5,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00041 at (5,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00041: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00041 at (5,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00041 at (5,2) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00042 at (5,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00042: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00042 at (5,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,3) -> NEAR-APOSTLES (corner): sat=5, loy=3 bundle.js:25238:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00043 at (5,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00043: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00043 (5,4) manually assigned to apostles bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00044 at (5,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00044: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00044 at (5,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,5) -> NEAR-APOSTLES (left edge): sat in [5,6), loy>=4 bundle.js:25226:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00045 at (5,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00045: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00045 at (5,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00045 at (5,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00046 at (5,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00046: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00046 at (5,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00046 at (5,2) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00047 at (5,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00047: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00047 at (5,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,3) -> NEAR-APOSTLES (corner): sat=5, loy=3 bundle.js:25238:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00048 at (5,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00048: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00048 (5,4) manually assigned to apostles bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00049 at (5,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00049: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00049 at (5,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,5) -> NEAR-APOSTLES (left edge): sat in [5,6), loy>=4 bundle.js:25226:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00050 at (6,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00050: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00050 at (6,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00050 at (6,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00051 at (6,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00051: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00051 at (6,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00051 at (6,2) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00052 at (6,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00052: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00052 at (6,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (6,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00053 at (6,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00053: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00053 (6,4) manually assigned to loyalists bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00054 at (6,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00054: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00054 at (6,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00055 at (6,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00055: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00055 at (6,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00055 at (6,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00056 at (6,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00056: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00056 at (6,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00056 at (6,2) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00057 at (6,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00057: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00057 at (6,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (6,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00058 at (6,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00058: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00058 (6,4) manually assigned to loyalists bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00059 at (6,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00059: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00059 at (6,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00060 at (7,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00060: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00060 at (7,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00060 at (7,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00061 at (7,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00061: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00061 at (7,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00061 at (7,2) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00062 at (7,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00062: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00062 at (7,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (7,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00063 at (7,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00063: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00063 at (7,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,4) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00064 at (7,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00064: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00064 at (7,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00065 at (7,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00065: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00065 at (7,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00065 at (7,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00066 at (7,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00066: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00066 at (7,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00066 at (7,2) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00067 at (7,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00067: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00067 at (7,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (7,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00068 at (7,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00068: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00068 at (7,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,4) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00069 at (7,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00069: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00069 at (7,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00070 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00070: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00070 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00070 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00071 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00071: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00071 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00071 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00072 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00072: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00072 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00072 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00073 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00073: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00073 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00073 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00074 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00074: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00074 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00074 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00075 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00075: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00075 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00075 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00076 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00076: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00076 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00076 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00077 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00077: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00077 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00077 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00078 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00078: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00078 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00078 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00079 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00079: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00079 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
✅ DIAGONAL: Customer segmentorID-00079 at (4,1) belongs to mercenaries (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00080 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00080: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00080 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00081 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00081: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00081 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00082 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00082: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00082 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00083 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00083: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00083 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00084 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00084: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00084 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00085 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00085: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00085 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00086 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00086: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00086 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00087 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00087: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00087 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00088 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00088: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00088 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00089 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00089: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00089 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00090 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00090: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00090 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00091 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00091: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00091 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00092 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00092: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00092 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00093 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00093: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00093 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00094 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00094: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00094 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00095 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00095: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00095 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00096 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00096: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00096 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00097 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00097: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00097 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00098 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00098: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00098 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00099 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00099: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00099 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00030 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00030 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00030 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00031 at (4,2) to hostages boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00031 at (4,2) - sat: true (4 in [4,5]), loy: false (2 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00031 at (4,2) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00035 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00035 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00035 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00036 at (4,2) to hostages boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00036 at (4,2) - sat: true (4 in [4,5]), loy: false (2 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00036 at (4,2) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00040 at (5,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00040 at (5,1) - sat: true (5 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00040 at (5,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00041 at (5,2) to hostages boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00041 at (5,2) - sat: true (5 in [4,5]), loy: false (2 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00041 at (5,2) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00045 at (5,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00045 at (5,1) - sat: true (5 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00045 at (5,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00046 at (5,2) to hostages boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00046 at (5,2) - sat: true (5 in [4,5]), loy: false (2 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00046 at (5,2) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00050 at (6,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00050 at (6,1) - sat: false (6 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00050 at (6,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00051 at (6,2) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00051 at (6,2) - sat: false (6 in [4,5]), loy: false (2 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00051 at (6,2) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00055 at (6,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00055 at (6,1) - sat: false (6 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00055 at (6,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00056 at (6,2) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00056 at (6,2) - sat: false (6 in [4,5]), loy: false (2 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00056 at (6,2) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00060 at (7,1) to hostages boundary (4,3) = 3 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00060 at (7,1) - sat: false (7 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00061 at (7,2) to hostages boundary (4,3) = 3 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00061 at (7,2) - sat: false (7 in [4,5]), loy: false (2 in [3]) bundle.js:21499:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00065 at (7,1) to hostages boundary (4,3) = 3 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00065 at (7,1) - sat: false (7 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00066 at (7,2) to hostages boundary (4,3) = 3 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00066 at (7,2) - sat: false (7 in [4,5]), loy: false (2 in [3]) bundle.js:21499:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00070 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00070 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00070 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00071 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00071 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00071 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00072 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00072 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00072 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00073 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00073 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00073 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00074 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00074 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00074 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00075 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00075 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00075 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00076 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00076 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00076 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00077 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00077 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00077 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00078 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00078 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00078 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00079 at (4,1) to hostages boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[4,5,6,7], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,5], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00079 at (4,1) - sat: true (4 in [4,5]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00079 at (4,1) meets distance (2) but fails search area bundle.js:21217:17
   - Qualifying customers: 0 bundle.js:21247:13
🔥🔥🔥 CALLING analyzeDiagonalProximity: hostages -> mercenaries bundle.js:20941:17
🔍 Diagonal analysis: hostages -> mercenaries (27 customers) bundle.js:21176:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00000 at (1,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00000: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00000 at (1,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00001 at (1,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00001: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00001 at (1,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00002 at (1,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00002: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00002 at (1,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00002 at (1,3) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00003 at (1,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00003: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00003 at (1,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00003 at (1,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00004 at (1,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00004: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00004 at (1,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00004 at (1,5) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00005 at (1,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00005: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00005 at (1,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00006 at (1,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00006: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00006 at (1,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00007 at (1,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00007: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00007 at (1,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00007 at (1,3) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00008 at (1,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00008: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00008 at (1,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00008 at (1,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00009 at (1,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00009: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00009 at (1,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00009 at (1,5) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00010 at (2,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00010: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00010 at (2,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00011 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00011: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00011 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00012 at (2,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00012: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00012 at (2,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00012 at (2,3) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00013 at (2,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00013: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00013 at (2,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00013 at (2,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00014 at (2,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00014: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00014 at (2,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00014 at (2,5) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00015 at (2,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00015: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00015 at (2,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00016 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00016: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00016 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00017 at (2,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00017: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00017 at (2,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00017 at (2,3) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00018 at (2,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00018: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00018 at (2,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00018 at (2,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00019 at (2,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00019: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00019 at (2,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00019 at (2,5) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00020 at (3,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00020: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00020 at (3,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,1) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00021 at (3,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00021: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00021 at (3,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,2) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00022 at (3,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00022: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00022 at (3,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00022 at (3,3) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00023 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00023: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00023 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00023 at (3,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00024 at (3,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00024: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00024 at (3,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00024 at (3,5) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00025 at (3,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00025: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00025 at (3,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,1) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00026 at (3,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00026: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00026 at (3,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,2) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00027 at (3,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00027: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00027 at (3,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00027 at (3,3) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00028 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00028: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00028 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00028 at (3,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00029 at (3,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00029: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00029 at (3,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00029 at (3,5) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00030 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00030: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00030 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00031 at (4,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00031: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00031 at (4,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00033 at (4,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00033: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00033 at (4,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,4) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00034 at (4,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00034: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00034 at (4,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,5) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00035 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00035: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00035 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00036 at (4,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00036: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00036 at (4,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00038 at (4,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00038: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00038 at (4,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,4) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00039 at (4,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00039: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00039 at (4,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,5) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00040 at (5,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00040: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00040 at (5,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00041 at (5,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00041: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00041 at (5,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00042 at (5,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00042: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00042 at (5,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,3) -> NEAR-APOSTLES (corner): sat=5, loy=3 bundle.js:25238:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00043 at (5,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00043: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00043 (5,4) manually assigned to apostles bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00044 at (5,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00044: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00044 at (5,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,5) -> NEAR-APOSTLES (left edge): sat in [5,6), loy>=4 bundle.js:25226:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00045 at (5,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00045: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00045 at (5,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00046 at (5,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00046: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00046 at (5,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00047 at (5,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00047: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00047 at (5,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,3) -> NEAR-APOSTLES (corner): sat=5, loy=3 bundle.js:25238:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00048 at (5,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00048: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00048 (5,4) manually assigned to apostles bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00049 at (5,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00049: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00049 at (5,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,5) -> NEAR-APOSTLES (left edge): sat in [5,6), loy>=4 bundle.js:25226:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00050 at (6,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00050: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00050 at (6,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00051 at (6,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00051: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00051 at (6,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00052 at (6,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00052: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00052 at (6,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (6,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00053 at (6,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00053: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00053 (6,4) manually assigned to loyalists bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00054 at (6,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00054: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00054 at (6,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00055 at (6,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00055: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00055 at (6,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00056 at (6,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00056: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00056 at (6,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00057 at (6,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00057: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00057 at (6,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (6,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00058 at (6,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00058: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00058 (6,4) manually assigned to loyalists bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00059 at (6,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00059: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00059 at (6,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00060 at (7,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00060: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00060 at (7,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00061 at (7,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00061: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00061 at (7,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00062 at (7,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00062: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00062 at (7,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (7,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00063 at (7,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00063: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00063 at (7,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,4) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00064 at (7,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00064: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00064 at (7,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00065 at (7,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00065: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00065 at (7,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00066 at (7,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00066: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00066 at (7,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00067 at (7,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00067: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00067 at (7,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (7,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00068 at (7,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00068: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00068 at (7,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,4) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00069 at (7,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00069: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00069 at (7,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00070 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00070: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00070 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00071 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00071: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00071 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00072 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00072: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00072 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00073 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00073: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00073 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00074 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00074: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00074 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00075 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00075: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00075 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00076 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00076: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00076 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00077 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00077: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00077 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00078 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00078: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00078 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00079 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00079: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00079 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00080 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00080: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00080 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00081 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00081: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00081 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00082 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00082: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00082 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00083 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00083: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00083 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00084 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00084: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00084 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00085 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00085: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00085 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00086 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00086: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00086 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00087 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00087: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00087 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00088 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00088: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00088 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00089 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00089: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00089 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00090 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00090: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00090 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00091 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00091: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00091 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00091 at (3,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00092 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00092: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00092 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00092 at (3,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00093 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00093: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00093 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00093 at (3,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00094 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00094: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00094 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00094 at (3,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00095 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00095: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00095 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00095 at (3,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00096 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00096: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00096 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00096 at (3,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00097 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00097: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00097 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00097 at (3,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00098 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00098: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00098 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00098 at (3,4) belongs to hostages (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00099 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00099: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00099 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
✅ DIAGONAL: Customer segmentorID-00099 at (3,4) belongs to hostages (context assignment) bundle.js:21347:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00002 at (1,3) to mercenaries boundary (4,3) = 3 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00002 at (1,3) - sat: false (1 in [4,3]), loy: true (3 in [3]) bundle.js:21499:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00003 at (1,4) to mercenaries boundary (4,3) = 3 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00003 at (1,4) - sat: false (1 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00004 at (1,5) to mercenaries boundary (4,3) = 3 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00004 at (1,5) - sat: false (1 in [4,3]), loy: false (5 in [3]) bundle.js:21499:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00007 at (1,3) to mercenaries boundary (4,3) = 3 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00007 at (1,3) - sat: false (1 in [4,3]), loy: true (3 in [3]) bundle.js:21499:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00008 at (1,4) to mercenaries boundary (4,3) = 3 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00008 at (1,4) - sat: false (1 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00009 at (1,5) to mercenaries boundary (4,3) = 3 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00009 at (1,5) - sat: false (1 in [4,3]), loy: false (5 in [3]) bundle.js:21499:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00012 at (2,3) to mercenaries boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00012 at (2,3) - sat: false (2 in [4,3]), loy: true (3 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00012 at (2,3) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00013 at (2,4) to mercenaries boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00013 at (2,4) - sat: false (2 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00013 at (2,4) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00014 at (2,5) to mercenaries boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00014 at (2,5) - sat: false (2 in [4,3]), loy: false (5 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00014 at (2,5) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00017 at (2,3) to mercenaries boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00017 at (2,3) - sat: false (2 in [4,3]), loy: true (3 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00017 at (2,3) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00018 at (2,4) to mercenaries boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00018 at (2,4) - sat: false (2 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00018 at (2,4) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00019 at (2,5) to mercenaries boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00019 at (2,5) - sat: false (2 in [4,3]), loy: false (5 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00019 at (2,5) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00022 at (3,3) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📐 DIAGONAL DISTANCE: Customer segmentorID-00023 at (3,4) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00023 at (3,4) - sat: true (3 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00023 at (3,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00024 at (3,5) to mercenaries boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00024 at (3,5) - sat: true (3 in [4,3]), loy: false (5 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00024 at (3,5) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00027 at (3,3) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📐 DIAGONAL DISTANCE: Customer segmentorID-00028 at (3,4) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00028 at (3,4) - sat: true (3 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00028 at (3,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00029 at (3,5) to mercenaries boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00029 at (3,5) - sat: true (3 in [4,3]), loy: false (5 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00029 at (3,5) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00091 at (3,4) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00091 at (3,4) - sat: true (3 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00091 at (3,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00092 at (3,4) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00092 at (3,4) - sat: true (3 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00092 at (3,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00093 at (3,4) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00093 at (3,4) - sat: true (3 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00093 at (3,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00094 at (3,4) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00094 at (3,4) - sat: true (3 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00094 at (3,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00095 at (3,4) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00095 at (3,4) - sat: true (3 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00095 at (3,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00096 at (3,4) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00096 at (3,4) - sat: true (3 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00096 at (3,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00097 at (3,4) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00097 at (3,4) - sat: true (3 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00097 at (3,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00098 at (3,4) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00098 at (3,4) - sat: true (3 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00098 at (3,4) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00099 at (3,4) to mercenaries boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[3,4,5] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00099 at (3,4) - sat: true (3 in [4,3]), loy: false (4 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00099 at (3,4) meets distance (1) but fails search area bundle.js:21217:17
   - Qualifying customers: 2 bundle.js:21247:13
🔥🔥🔥 CALLING analyzeDiagonalProximity: defectors -> loyalists bundle.js:20945:17
🔍 Diagonal analysis: defectors -> loyalists (4 customers) bundle.js:21176:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00000 at (1,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00000: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00000 at (1,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00001 at (1,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00001: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00001 at (1,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00002 at (1,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00002: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00002 at (1,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00003 at (1,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00003: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00003 at (1,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00004 at (1,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00004: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00004 at (1,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00005 at (1,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00005: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00005 at (1,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00006 at (1,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00006: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00006 at (1,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00007 at (1,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00007: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00007 at (1,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00008 at (1,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00008: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00008 at (1,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00009 at (1,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00009: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00009 at (1,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (1,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00010 at (2,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00010: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00010 at (2,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00011 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00011: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00011 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00012 at (2,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00012: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00012 at (2,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00013 at (2,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00013: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00013 at (2,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00014 at (2,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00014: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00014 at (2,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00015 at (2,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00015: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00015 at (2,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,1) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00016 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00016: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00016 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00017 at (2,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00017: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00017 at (2,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00018 at (2,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00018: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00018 at (2,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00019 at (2,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00019: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00019 at (2,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00020 at (3,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00020: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00020 at (3,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,1) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
✅ DIAGONAL: Customer segmentorID-00020 at (3,1) belongs to defectors (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00021 at (3,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00021: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00021 at (3,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,2) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
✅ DIAGONAL: Customer segmentorID-00021 at (3,2) belongs to defectors (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00022 at (3,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00022: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00022 at (3,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00023 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00023: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00023 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00024 at (3,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00024: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00024 at (3,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00025 at (3,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00025: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00025 at (3,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,1) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
✅ DIAGONAL: Customer segmentorID-00025 at (3,1) belongs to defectors (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00026 at (3,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00026: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00026 at (3,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,2) -> DEFECTORS: sat < 4 AND loy < 3 bundle.js:25311:13
✅ DIAGONAL: Customer segmentorID-00026 at (3,2) belongs to defectors (context assignment) bundle.js:21347:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00027 at (3,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00027: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00027 at (3,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,3) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00028 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00028: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00028 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00029 at (3,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00029: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00029 at (3,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,5) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00030 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00030: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00030 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00031 at (4,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00031: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00031 at (4,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00033 at (4,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00033: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00033 at (4,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,4) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00034 at (4,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00034: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00034 at (4,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,5) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00035 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00035: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00035 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00036 at (4,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00036: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00036 at (4,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00038 at (4,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00038: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00038 at (4,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,4) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00039 at (4,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00039: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00039 at (4,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,5) -> LOYALISTS: sat >= 4 AND loy >= 3 bundle.js:25298:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00040 at (5,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00040: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00040 at (5,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00041 at (5,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00041: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00041 at (5,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00042 at (5,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00042: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00042 at (5,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,3) -> NEAR-APOSTLES (corner): sat=5, loy=3 bundle.js:25238:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00043 at (5,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00043: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00043 (5,4) manually assigned to apostles bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00044 at (5,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00044: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00044 at (5,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,5) -> NEAR-APOSTLES (left edge): sat in [5,6), loy>=4 bundle.js:25226:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00045 at (5,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00045: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00045 at (5,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00046 at (5,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00046: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00046 at (5,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (5,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00047 at (5,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00047: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00047 at (5,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,3) -> NEAR-APOSTLES (corner): sat=5, loy=3 bundle.js:25238:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00048 at (5,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00048: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00048 (5,4) manually assigned to apostles bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00049 at (5,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00049: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00049 at (5,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (5,5) -> NEAR-APOSTLES (left edge): sat in [5,6), loy>=4 bundle.js:25226:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00050 at (6,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00050: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00050 at (6,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00051 at (6,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00051: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00051 at (6,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00052 at (6,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00052: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00052 at (6,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (6,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00053 at (6,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00053: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00053 (6,4) manually assigned to loyalists bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00054 at (6,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00054: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00054 at (6,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00055 at (6,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00055: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00055 at (6,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00056 at (6,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00056: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00056 at (6,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00057 at (6,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00057: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00057 at (6,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (6,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00058 at (6,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00058: true bundle.js:25320:13
🔧 MANUAL ASSIGNMENT: Point segmentorID-00058 (6,4) manually assigned to loyalists bundle.js:25324:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00059 at (6,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00059: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00059 at (6,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (6,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00060 at (7,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00060: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00060 at (7,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00061 at (7,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00061: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00061 at (7,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00062 at (7,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00062: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00062 at (7,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (7,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00063 at (7,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00063: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00063 at (7,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,4) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00064 at (7,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00064: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00064 at (7,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00065 at (7,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00065: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00065 at (7,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00066 at (7,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00066: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00066 at (7,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,2) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00067 at (7,3) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00067: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00067 at (7,3) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🎯 Point (7,3) -> NEAR-APOSTLES (bottom edge): sat>=6, loy=3 bundle.js:25232:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00068 at (7,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00068: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00068 at (7,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,4) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00069 at (7,5) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00069: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00069 at (7,5) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (7,5) -> APOSTLES: coordinates >= (6,4), creates 1x1 area bundle.js:25285:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00070 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00070: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00070 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00071 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00071: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00071 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00072 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00072: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00072 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00073 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00073: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00073 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00074 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00074: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00074 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00075 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00075: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00075 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00076 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00076: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00076 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00077 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00077: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00077 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00078 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00078: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00078 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00079 at (4,1) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00079: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00079 at (4,1) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (4,1) -> MERCENARIES: sat >= 4 BUT loy < 3 bundle.js:25302:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00080 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00080: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00080 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00081 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00081: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00081 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00082 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00082: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00082 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00083 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00083: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00083 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00084 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00084: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00084 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00085 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00085: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00085 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00086 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00086: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00086 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00087 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00087: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00087 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00088 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00088: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00088 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00089 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00089: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00089 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00090 at (2,2) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00090: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00090 at (2,2) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (2,2) -> TERRORISTS: coordinates <= (2,2), creates 1x1 area bundle.js:25291:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00091 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00091: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00091 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00092 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00092: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00092 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00093 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00093: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00093 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00094 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00094: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00094 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00095 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00095: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00095 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00096 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00096: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00096 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00097 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00097: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00097 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00098 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00098: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00098 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00099 at (3,4) bundle.js:25319:13
🔍 About to check manual assignments - map has segmentorID-00099: false bundle.js:25320:13
🔍 getNaturalQuadrantForPoint called for point ID: segmentorID-00099 at (3,4) bundle.js:25186:13
🔍 This function should NOT check manual assignments bundle.js:25187:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=1, terroristsZoneSize=1, satisfactionScale=1-7, loyaltyScale=1-5 bundle.js:30041:11
🔧 Parsed scales: satMin=1, satMax=7, loyMin=1, loyMax=5 bundle.js:30042:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:30071:11
🔧 Apostles zone: satisfaction >= 6, loyalty >= 4 bundle.js:30072:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 2 bundle.js:30073:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:25203:13
🔍 getNaturalQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:25204:13
📍 Current midpoint in classification: sat=4, loy=3 bundle.js:25205:13
🔍 Near-apostles space check: apostlesMinSat=6, apostlesMinLoy=4, hasSpace=true bundle.js:25215:17
🔍 Near-apostles bounds: nearSat=5, nearLoy=3, apostlesSat>=6, apostlesLoy>=4 bundle.js:25222:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=2, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=3, midpoint=(4,3), hasSpace=false bundle.js:25255:17
🎯 Point (3,4) -> HOSTAGES: sat < 4 BUT loy >= 3 bundle.js:25306:15
   📐 DIAGONAL DISTANCE: Customer segmentorID-00020 at (3,1) to loyalists boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00020 at (3,1) - sat: true (3 in [4,3]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00020 at (3,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00021 at (3,2) to loyalists boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00021 at (3,2) - sat: true (3 in [4,3]), loy: false (2 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00021 at (3,2) meets distance (1) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00025 at (3,1) to loyalists boundary (4,3) = 2 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00025 at (3,1) - sat: true (3 in [4,3]), loy: false (1 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00025 at (3,1) meets distance (2) but fails search area bundle.js:21217:17
   📐 DIAGONAL DISTANCE: Customer segmentorID-00026 at (3,2) to loyalists boundary (4,3) = 1 bundle.js:21269:13
   📏 Potential ranges: sat=[1,2,3,4], loy=[1,2,3] bundle.js:21492:13
   📏 Search area: sat=[4,3], loy=[3] bundle.js:21493:13
   📏 Search area check: segmentorID-00026 at (3,2) - sat: true (3 in [4,3]), loy: false (2 in [3]) bundle.js:21499:15
   🔍 Customer segmentorID-00026 at (3,2) meets distance (1) but fails search area bundle.js:21217:17
   - Qualifying customers: 0 bundle.js:21247:13
🔍 CALCULATING loyalists_close_to_apostles: 
Object { loyalistsCount: 6, showSpecialZones: true, showNearApostles: true }
bundle.js:20950:17
🔍 analyzeSpecialZoneProximity: loyalists -> apostles | customers: 6 | showSpecialZones: true | showNearApostles: true bundle.js:21589:13
🔍 shouldAnalyzeSpecialZoneProximity result for loyalists -> apostles: false bundle.js:21593:13
❌ Special zone proximity analysis skipped for loyalists -> apostles (conditions not met) bundle.js:21600:15
🔍 CALCULATING loyalists_close_to_near_apostles: 
Object { loyalistsCount: 6, showSpecialZones: true, showNearApostles: true }
bundle.js:20958:17
🔍 analyzeSpecialZoneProximity: loyalists -> near_apostles | customers: 6 | showSpecialZones: true | showNearApostles: true bundle.js:21589:13
🔍 shouldAnalyzeSpecialZoneProximity result for loyalists -> near_apostles: true bundle.js:21593:13
🚫 EXCLUDING customer segmentorID-00053 at (6,4) - already in near_apostles zone bundle.js:21615:17
🚫 EXCLUDING customer segmentorID-00058 at (6,4) - already in near_apostles zone bundle.js:21615:17
📊 After target zone exclusion: 4 customers (excluded 2 already in near_apostles zone) bundle.js:21619:13
🔍 Customer segmentorID-00033 at (4,4) is on quadrant boundary: hostages=true, mercenaries=false bundle.js:21858:15
🚫 EXCLUDING customer segmentorID-00033 at (4,4) - on quadrant boundary (Rule 8) bundle.js:21625:17
🔍 Customer segmentorID-00034 at (4,5) is on quadrant boundary: hostages=true, mercenaries=false bundle.js:21858:15
🚫 EXCLUDING customer segmentorID-00034 at (4,5) - on quadrant boundary (Rule 8) bundle.js:21625:17
🔍 Customer segmentorID-00038 at (4,4) is on quadrant boundary: hostages=true, mercenaries=false bundle.js:21858:15
🚫 EXCLUDING customer segmentorID-00038 at (4,4) - on quadrant boundary (Rule 8) bundle.js:21625:17
🔍 Customer segmentorID-00039 at (4,5) is on quadrant boundary: hostages=true, mercenaries=false bundle.js:21858:15
🚫 EXCLUDING customer segmentorID-00039 at (4,5) - on quadrant boundary (Rule 8) bundle.js:21625:17
📊 After boundary conflict exclusion: 0 customers (excluded 4 on quadrant boundaries) bundle.js:21629:13
📊 Special zone proximity result: loyalists -> near_apostles: 0 customers, 0 positions, avg distance: 0.00 bundle.js:21678:13
🔍 CALCULATING near_apostles_close_to_apostles: 
Object { near_apostlesCount: 8, showSpecialZones: true, showNearApostles: true }
bundle.js:20966:17
🔍 analyzeSpecialZoneProximity: near_apostles -> apostles | customers: 8 | showSpecialZones: true | showNearApostles: true bundle.js:21589:13
🔍 shouldAnalyzeSpecialZoneProximity result for near_apostles -> apostles: true bundle.js:21593:13
📊 After target zone exclusion: 8 customers (excluded 0 already in apostles zone) bundle.js:21619:13
🔍 Customer segmentorID-00042 at (5,3) is on quadrant boundary: hostages=false, mercenaries=true bundle.js:21858:15
🚫 EXCLUDING customer segmentorID-00042 at (5,3) - on quadrant boundary (Rule 8) bundle.js:21625:17
🔍 Customer segmentorID-00047 at (5,3) is on quadrant boundary: hostages=false, mercenaries=true bundle.js:21858:15
🚫 EXCLUDING customer segmentorID-00047 at (5,3) - on quadrant boundary (Rule 8) bundle.js:21625:17
🔍 Customer segmentorID-00052 at (6,3) is on quadrant boundary: hostages=false, mercenaries=true bundle.js:21858:15
🚫 EXCLUDING customer segmentorID-00052 at (6,3) - on quadrant boundary (Rule 8) bundle.js:21625:17
🔍 Customer segmentorID-00057 at (6,3) is on quadrant boundary: hostages=false, mercenaries=true bundle.js:21858:15
🚫 EXCLUDING customer segmentorID-00057 at (6,3) - on quadrant boundary (Rule 8) bundle.js:21625:17
🔍 Customer segmentorID-00062 at (7,3) is on quadrant boundary: hostages=false, mercenaries=true bundle.js:21858:15
🚫 EXCLUDING customer segmentorID-00062 at (7,3) - on quadrant boundary (Rule 8) bundle.js:21625:17
🔍 Customer segmentorID-00067 at (7,3) is on quadrant boundary: hostages=false, mercenaries=true bundle.js:21858:15
🚫 EXCLUDING customer segmentorID-00067 at (7,3) - on quadrant boundary (Rule 8) bundle.js:21625:17
📊 After boundary conflict exclusion: 2 customers (excluded 6 on quadrant boundaries) bundle.js:21629:13
🎯 near_apostles customer segmentorID-00044 at (5,5) is 1 positions from apostles zone bundle.js:21659:17
🎯 near_apostles customer segmentorID-00049 at (5,5) is 1 positions from apostles zone bundle.js:21659:17
📊 Special zone proximity result: near_apostles -> apostles: 2 customers, 1 positions, avg distance: 1.00 bundle.js:21678:13
🔍 CALCULATING defectors_close_to_terrorists: 
Object { defectorsCount: 4, showSpecialZones: true, showNearApostles: true }
bundle.js:20974:17
🔍 analyzeSpecialZoneProximity: defectors -> terrorists | customers: 4 | showSpecialZones: true | showNearApostles: true bundle.js:21589:13
🔍 shouldAnalyzeSpecialZoneProximity result for defectors -> terrorists: true bundle.js:21593:13
📊 After target zone exclusion: 4 customers (excluded 0 already in terrorists zone) bundle.js:21619:13
📊 After boundary conflict exclusion: 4 customers (excluded 0 on quadrant boundaries) bundle.js:21629:13
🎯 defectors customer segmentorID-00020 at (3,1) is 1 positions from terrorists zone bundle.js:21659:17
🎯 defectors customer segmentorID-00021 at (3,2) is 1 positions from terrorists zone bundle.js:21659:17
🎯 defectors customer segmentorID-00025 at (3,1) is 1 positions from terrorists zone bundle.js:21659:17
🎯 defectors customer segmentorID-00026 at (3,2) is 1 positions from terrorists zone bundle.js:21659:17
📊 Special zone proximity result: defectors -> terrorists: 4 customers, 2 positions, avg distance: 1.00 bundle.js:21678:13
🔍 analyzeSpecialZoneProximity: apostles -> loyalists | customers: 8 | showSpecialZones: true | showNearApostles: true bundle.js:21589:13
🔍 shouldAnalyzeSpecialZoneProximity result for apostles -> loyalists: false bundle.js:21593:13
❌ Special zone proximity analysis skipped for apostles -> loyalists (conditions not met) bundle.js:21600:15
🔍 analyzeSpecialZoneProximity: near_apostles -> loyalists | customers: 8 | showSpecialZones: true | showNearApostles: true bundle.js:21589:13
🔍 shouldAnalyzeSpecialZoneProximity result for near_apostles -> loyalists: true bundle.js:21593:13
❌ No boundaries found for target zone: loyalists bundle.js:21607:15
🔍 analyzeSpecialZoneProximity: terrorists -> defectors | customers: 19 | showSpecialZones: true | showNearApostles: true bundle.js:21589:13
🔍 shouldAnalyzeSpecialZoneProximity result for terrorists -> defectors: true bundle.js:21593:13
❌ No boundaries found for target zone: defectors bundle.js:21607:15
🔍 DEBUGGING SUMMARY CALCULATION - About to call calculateSummaryMetrics bundle.js:20994:13
🔍 Analysis details: 
Object { loyalists_close_to_mercenaries: 0, loyalists_close_to_hostages: 4, mercenaries_close_to_loyalists: 0, mercenaries_close_to_defectors: 18, hostages_close_to_loyalists: 15, hostages_close_to_defectors: 4, defectors_close_to_mercenaries: 4, defectors_close_to_hostages: 0 }
bundle.js:20995:13
🔍 Special zones details: 
Object { apostles_close_to_loyalists: 0, near_apostles_close_to_loyalists: 0, terrorists_close_to_defectors: 0 }
bundle.js:21007:15
🚨 SUMMARY CALCULATION RESULT: 
Object { totalProximityCustomers: 53, totalProximityPositions: 17 }
bundle.js:21016:13
🔍 Detecting crossroads customers... bundle.js:21975:13
🎯 Crossroads customer segmentorID-00022 appears in 3 relationships: hostages_close_to_loyalists_defectors, hostages_close_to_loyalists_defectors, hostages_close_to_mercenaries bundle.js:22007:17
🎯 Crossroads customer segmentorID-00027 appears in 3 relationships: hostages_close_to_loyalists_defectors, hostages_close_to_loyalists_defectors, hostages_close_to_mercenaries bundle.js:22007:17
🎯 Crossroads customer segmentorID-00020 appears in 2 relationships: defectors_close_to_mercenaries, defectors_close_to_terrorists bundle.js:22007:17
🎯 Crossroads customer segmentorID-00021 appears in 2 relationships: defectors_close_to_mercenaries, defectors_close_to_terrorists bundle.js:22007:17
🎯 Crossroads customer segmentorID-00025 appears in 2 relationships: defectors_close_to_mercenaries, defectors_close_to_terrorists bundle.js:22007:17
🎯 Crossroads customer segmentorID-00026 appears in 2 relationships: defectors_close_to_mercenaries, defectors_close_to_terrorists bundle.js:22007:17
📊 Crossroads detection complete: 6 total, 2 high-value bundle.js:22037:13
🚨 CROSSROADS DETECTION RESULT: 
Object { totalCrossroads: 6, highValueCrossroads: 2 }
bundle.js:21023:13
🚨 ENHANCED PROXIMITY CLASSIFIER FINAL RESULT: 
Object { loyalists_close_to_apostles: 0, loyalists_close_to_near_apostles: 0, defectors_close_to_terrorists: 4, showSpecialZones: true, showNearApostles: true }
bundle.js:21039:13
🚀🚀🚀 ENHANCED PROXIMITY CLASSIFIER - analyzeProximity COMPLETE bundle.js:21046:13
🚀 FINAL RESULTS: bundle.js:21047:13
   - Total proximity customers: 53 bundle.js:21048:13
   - Total proximity positions: 17 bundle.js:21049:13
   - Average risk score: 48 bundle.js:21050:13
   - Defectors close to loyalists: 0 customers bundle.js:21051:13
   - Defectors close to loyalists positions: 
Array []
bundle.js:21052:13
🎯 Proximity Analysis Result: 
Object { analysis: {…}, specialZones: {…}, summary: {…}, crossroads: {…}, settings: {…} }
bundle.js:21053:13
🔍 DISTRIBUTION SECTION: EnhancedProximityClassifier result: 
Object { loyalists_close_to_apostles: 0, loyalists_close_to_near_apostles: 0, defectors_close_to_terrorists: 4, showSpecialZones: true, mode: "ALL_AREAS" }
bundle.js:12528:15
🚨 DISTRIBUTION SECTION RETURNING RESULT: 
Object { analysis: {…}, specialZones: {…}, summary: {…}, crossroads: {…}, settings: {…} }
bundle.js:12535:15
🔍 DISTRIBUTION SECTION proximityAnalysis result: 
Object { loyalists_close_to_mercenaries: 0, isAvailable: true, totalCustomers: 100 }
bundle.js:12642:11
🚨 DISTRIBUTION SECTION PROXIMITY CALCULATIONS: 
Object { loyalists_near_mercenaries: 0, loyalists_near_hostages: 4, hostages_near_loyalists: 15, hostages_near_defectors: 4 }
bundle.js:12706:11
🔍 DISTRIBUTION USING CONTEXT DIRECTLY: 
Object { showSpecialZones: true, showNearApostles: true, contextDistribution: {…}, finalDistribution: {…} }
bundle.js:12727:11
🔍 Special Groups Debug: 
Object { showNearApostles: true, apostles: 8, near_apostles: 8, terrorists: 19, totalSpecial: 35 }
bundle.js:12858:11
🔍 Full Distribution Object: 
Object { loyalists: 39, defectors: 19, mercenaries: 30, hostages: 12, apostles: 16, nearApostles: 23, terrorists: 2 }
bundle.js:12865:11
🔍 Effective Distribution: 
Object { loyalists: 6, mercenaries: 26, hostages: 27, defectors: 4, apostles: 8, terrorists: 19, nearApostles: 8 }
bundle.js:12866:11
🎯 ProximitySection: Using context distribution: 
Object { loyalists: 6, mercenaries: 26, hostages: 27, defectors: 4, apostles: 8, terrorists: 19, near_apostles: 8, near_terrorists: 0 }
bundle.js:16539:11
🔍 Context distribution totals: 
Object { loyalists: 6, apostles: 8, total_loyalist_area: 14, totalFromContext: 98 }
bundle.js:16543:11
🔍 ABOUT TO USE proximityAnalysis.summary: 
Object { totalProximityCustomers: 53, isAvailable: true, source: "proximityAnalysis.summary" }
bundle.js:16689:11
🎯 ProximitySection: Using context distribution: 
Object { loyalists: 6, mercenaries: 26, hostages: 27, defectors: 4, apostles: 8, terrorists: 19, near_apostles: 8, near_terrorists: 0 }
bundle.js:16539:11
🔍 Context distribution totals: 
Object { loyalists: 6, apostles: 8, total_loyalist_area: 14, totalFromContext: 98 }
bundle.js:16543:11
🔍 ABOUT TO USE proximityAnalysis.summary: 
Object { totalProximityCustomers: 53, isAvailable: true, source: "proximityAnalysis.summary" }
bundle.js:16689:11
