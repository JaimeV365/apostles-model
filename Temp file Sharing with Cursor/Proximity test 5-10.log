Error: Not allowed to define cross-origin object as property on [Object] or [Array] XrayWrapper 3 content-script.js:376:604
Feature Policy: Skipping unsupported feature name “clipboard-read”. content-script.js:39:3880
Feature Policy: Skipping unsupported feature name “clipboard-write”. content-script.js:39:3880
Feature Policy: Skipping unsupported feature name “clipboard-read”. content-script.js:39:89374
Feature Policy: Skipping unsupported feature name “clipboard-write”. content-script.js:39:89374
Error: Not allowed to define cross-origin object as property on [Object] or [Array] XrayWrapper 3 content-script.js:376:604
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (2,3) -> MERCENARIES: sat >= 2 BUT loy < 3.5 bundle.js:23327:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00005 at (4,7) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00005: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🎯 Point (4,7) -> NEAR-APOSTLES (bottom edge): sat>=3, loy=7 bundle.js:23248:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00006 at (5,9) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00006: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,9) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00007 at (3,5) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00007: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (3,5) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00008 at (4,6) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00008: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (4,6) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00009 at (5,10) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00009: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,10) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🔍 DISTRIBUTION SECTION - Customer quadrant assignments: bundle.js:12448:11
  Customer segmentorID-00000 (5,5) → loyalists bundle.js:12450:13
  Customer segmentorID-00001 (4,6) → loyalists bundle.js:12450:13
  Customer segmentorID-00002 (3,4) → loyalists bundle.js:12450:13
  Customer segmentorID-00003 (5,8) → apostles bundle.js:12450:13
  Customer segmentorID-00004 (2,3) → mercenaries bundle.js:12450:13
  Customer segmentorID-00005 (4,7) → near_apostles bundle.js:12450:13
  Customer segmentorID-00006 (5,9) → apostles bundle.js:12450:13
  Customer segmentorID-00007 (3,5) → loyalists bundle.js:12450:13
  Customer segmentorID-00008 (4,6) → loyalists bundle.js:12450:13
  Customer segmentorID-00009 (5,10) → apostles bundle.js:12450:13
🎯 EnhancedProximityClassifier.analyzeProximity called with: 
Object { dataLength: 10, isPremium: false, userThreshold: undefined, showSpecialZones: true, showNearApostles: false }
bundle.js:19765:13
🔍 EnhancedProximityClassifier.groupCustomersByQuadrant - Starting grouping by context assignments (NO proximity filtering) bundle.js:19884:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00000 at (5,5) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00000: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,5) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00000 at (5,5) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00001 at (4,6) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00001: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (4,6) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00001 at (4,6) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00002 at (3,4) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00002: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (3,4) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00002 at (3,4) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00003 at (5,8) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00003: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,8) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🎯 Point segmentorID-00003 at (5,8) assigned to: apostles bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00004 at (2,3) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00004: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (2,3) -> MERCENARIES: sat >= 2 BUT loy < 3.5 bundle.js:23327:15
🎯 Point segmentorID-00004 at (2,3) assigned to: mercenaries bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00005 at (4,7) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00005: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🎯 Point (4,7) -> NEAR-APOSTLES (bottom edge): sat>=3, loy=7 bundle.js:23248:21
🎯 Point segmentorID-00005 at (4,7) assigned to: near_apostles bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00006 at (5,9) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00006: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,9) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🎯 Point segmentorID-00006 at (5,9) assigned to: apostles bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00007 at (3,5) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00007: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (3,5) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00007 at (3,5) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00008 at (4,6) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00008: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (4,6) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00008 at (4,6) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00009 at (5,10) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00009: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,10) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🎯 Point segmentorID-00009 at (5,10) assigned to: apostles bundle.js:19888:15
📊 Final context-based grouping (includes ALL customers from each quadrant): 
Object { loyalists: 5, mercenaries: 1, hostages: 0, defectors: 0, apostles: 3, near_apostles: 1, terrorists: 0 }
bundle.js:19895:13
📊 Grouped customers: 
Object { loyalists: 5, mercenaries: 1, hostages: 0, defectors: 0, apostles: 3, near_apostles: 1, terrorists: 0 }
bundle.js:19786:13
🚨 About to call analyzeQuadrantProximity methods - threshold: 2 bundle.js:19795:13
🚨 Grouped customers available: 
Object { loyalists: 5, mercenaries: 1 }
bundle.js:19796:13
🔍 analyzeQuadrantProximity: loyalists -> mercenaries | customers: 5 | threshold: 2 bundle.js:19911:13
🔍 LOYALIST segmentorID-00000 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00001 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00002 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00002 NEAR MERCENARIES: loy=4, distance=0.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00007 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00007 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00008 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 analyzeQuadrantProximity: loyalists -> hostages | customers: 5 | threshold: 2 bundle.js:19911:13
🔍 LOYALIST segmentorID-00000 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00001 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00002 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00002 NEAR MERCENARIES: loy=4, distance=0.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00007 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00007 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00008 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 analyzeQuadrantProximity: mercenaries -> loyalists | customers: 1 | threshold: 2 bundle.js:19911:13
🔍 MERCENARIES segmentorID-00004 NEAR LOYALISTS: loy=3, distance=0.5, threshold=2.5 bundle.js:19609:19
🔍 MERCENARIES segmentorID-00004 NEAR DEFECTORS: loy=3, distance=0.5, threshold=1.5 bundle.js:19617:19
🔍 analyzeQuadrantProximity: mercenaries -> defectors | customers: 1 | threshold: 2 bundle.js:19911:13
🔍 MERCENARIES segmentorID-00004 NEAR LOYALISTS: loy=3, distance=0.5, threshold=2.5 bundle.js:19609:19
🔍 MERCENARIES segmentorID-00004 NEAR DEFECTORS: loy=3, distance=0.5, threshold=1.5 bundle.js:19617:19
🔍 analyzeQuadrantProximity: hostages -> loyalists | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeQuadrantProximity: hostages -> defectors | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeQuadrantProximity: defectors -> mercenaries | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeQuadrantProximity: defectors -> hostages | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeSpecialZoneProximity: loyalists -> apostles | customers: 5 | showSpecialZones: true | showNearApostles: false bundle.js:19970:13
📊 After target zone exclusion: 5 customers (excluded 0 already in apostles zone) bundle.js:19996:13
🔍 Customer segmentorID-00002 at (3,4) is on quadrant boundary: hostages=true, mercenaries=false bundle.js:20226:15
🚫 EXCLUDING customer segmentorID-00002 at (3,4) - on quadrant boundary (Rule 8) bundle.js:20002:17
🔍 Customer segmentorID-00007 at (3,5) is on quadrant boundary: hostages=true, mercenaries=false bundle.js:20226:15
🚫 EXCLUDING customer segmentorID-00007 at (3,5) - on quadrant boundary (Rule 8) bundle.js:20002:17
📊 After boundary conflict exclusion: 3 customers (excluded 2 on quadrant boundaries) bundle.js:20006:13
📊 Special zone proximity result: loyalists -> apostles: 0 customers, 0 positions, avg distance: 0.00 bundle.js:20055:13
🔍 analyzeSpecialZoneProximity: loyalists -> near_apostles | customers: 5 | showSpecialZones: true | showNearApostles: false bundle.js:19970:13
❌ Special zone proximity analysis skipped for loyalists -> near_apostles (conditions not met) bundle.js:19977:15
🔍 analyzeSpecialZoneProximity: defectors -> terrorists | customers: 0 | showSpecialZones: true | showNearApostles: false bundle.js:19970:13
🔍 analyzeSpecialZoneProximity: apostles -> loyalists | customers: 3 | showSpecialZones: true | showNearApostles: false bundle.js:19970:13
❌ No boundaries found for target zone: loyalists bundle.js:19984:15
🔍 analyzeSpecialZoneProximity: near_apostles -> loyalists | customers: 1 | showSpecialZones: true | showNearApostles: false bundle.js:19970:13
❌ Special zone proximity analysis skipped for near_apostles -> loyalists (conditions not met) bundle.js:19977:15
🔍 analyzeSpecialZoneProximity: terrorists -> defectors | customers: 0 | showSpecialZones: true | showNearApostles: false bundle.js:19970:13
🔍 DEBUGGING SUMMARY CALCULATION - About to call calculateSummaryMetrics bundle.js:19828:13
🔍 Analysis details: 
Object { loyalists_close_to_mercenaries: 5, loyalists_close_to_hostages: 2, mercenaries_close_to_loyalists: 1, mercenaries_close_to_defectors: 1, hostages_close_to_loyalists: 0, hostages_close_to_defectors: 0, defectors_close_to_mercenaries: 0, defectors_close_to_hostages: 0 }
bundle.js:19829:13
🔍 Special zones details: 
Object { apostles_close_to_loyalists: 0, near_apostles_close_to_loyalists: 0, terrorists_close_to_defectors: 0 }
bundle.js:19841:15
🚨 SUMMARY CALCULATION RESULT: 
Object { totalProximityCustomers: 9, totalProximityPositions: 8 }
bundle.js:19850:13
🎯 Proximity Analysis Result: 
Object { analysis: {…}, specialZones: {…}, summary: {…}, settings: {…} }
bundle.js:19865:13
🔍 DISTRIBUTION SECTION proximityAnalysis result: 
Object { loyalists_close_to_mercenaries: 5, isAvailable: true, totalCustomers: 10 }
bundle.js:12458:11
🚨 DISTRIBUTION SECTION PROXIMITY CALCULATIONS: 
Object { loyalists_near_mercenaries: 5, loyalists_near_hostages: 2, hostages_near_loyalists: 0, hostages_near_defectors: 0 }
bundle.js:12515:11
🔍 DISTRIBUTION USING CONTEXT DIRECTLY: 
Object { showSpecialZones: true, showNearApostles: true, contextDistribution: {…}, finalDistribution: {…} }
bundle.js:12536:11
🔍 Special Groups Debug: 
Object { showNearApostles: true, apostles: 3, near_apostles: 1, terrorists: 0, totalSpecial: 4 }
bundle.js:12667:11
🔍 Full Distribution Object: 
Object { loyalists: 9, defectors: 0, mercenaries: 0, hostages: 1, apostles: 7, nearApostles: 2, terrorists: 0 }
bundle.js:12674:11
🔍 Effective Distribution: 
Object { loyalists: 5, mercenaries: 1, hostages: 0, defectors: 0, apostles: 3, terrorists: 0, nearApostles: 1 }
bundle.js:12675:11
ðŸŽ¯ ProximitySection: Using context distribution: 
Object { loyalists: 5, mercenaries: 1, hostages: 0, defectors: 0, apostles: 3, terrorists: 0, near_apostles: 1, near_terrorists: 0 }
bundle.js:15169:11
ðŸ”� Context distribution totals: 
Object { loyalists: 5, apostles: 3, total_loyalist_area: 8, totalFromContext: 10 }
bundle.js:15173:11
🔍 getQuadrantForPoint called for point ID: segmentorID-00000 at (5,5) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00000: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,5) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00001 at (4,6) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00001: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (4,6) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00002 at (3,4) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00002: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (3,4) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00003 at (5,8) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00003: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,8) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00004 at (2,3) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00004: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (2,3) -> MERCENARIES: sat >= 2 BUT loy < 3.5 bundle.js:23327:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00005 at (4,7) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00005: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🎯 Point (4,7) -> NEAR-APOSTLES (bottom edge): sat>=3, loy=7 bundle.js:23248:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00006 at (5,9) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00006: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,9) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00007 at (3,5) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00007: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (3,5) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00008 at (4,6) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00008: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (4,6) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00009 at (5,10) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00009: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,10) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
ðŸ”� MANUAL COUNT from getQuadrantForPoint: 
Object { loyalists: 5, apostles: 3, mercenaries: 1, near_apostles: 1 }
bundle.js:15188:13
ðŸ”� DISCREPANCY ANALYSIS: 
Object { contextSaysLoyalists: 5, manualCountLoyalists: 5, contextSaysApostles: 3, manualCountApostles: 3, contextTotal: 10, manualTotal: 10, difference: "Context: 10, Manual: 10" }
bundle.js:15189:13
🔄 PROXIMITY ANALYSIS USEMEMO RECALCULATING with dependencies: 
Object { dataLength: 10, satisfactionScale: "1-5", loyaltyScale: "0-10", midpointSat: 2, midpointLoy: 3.5, contextDistributionTotal: 10, manualAssignmentsSize: 0, apostlesZoneSize: 2, terroristsZoneSize: 1, isPremium: false, … }
bundle.js:15203:13
ðŸ”„ Proximity analysis recalculating with: 
Object { dataLength: 10, midpoint: {…}, contextDistribution: {…}, manualAssignments: 0 }
bundle.js:15218:13
ðŸ”� Creating DistanceCalculator with: 
Object { satisfactionScale: "1-5", loyaltyScale: "0-10", midpoint: {…} }
bundle.js:15226:13
ðŸ”� Creating EnhancedProximityClassifier with: 
Object { satisfactionScale: "1-5", loyaltyScale: "0-10", midpoint: {…} }
bundle.js:15317:13
🎯 EnhancedProximityClassifier.analyzeProximity called with: 
Object { dataLength: 10, isPremium: false, userThreshold: undefined, showSpecialZones: true, showNearApostles: true }
bundle.js:19765:13
🔍 EnhancedProximityClassifier.groupCustomersByQuadrant - Starting grouping by context assignments (NO proximity filtering) bundle.js:19884:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00000 at (5,5) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00000: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,5) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00000 at (5,5) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00001 at (4,6) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00001: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (4,6) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00001 at (4,6) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00002 at (3,4) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00002: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (3,4) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00002 at (3,4) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00003 at (5,8) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00003: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,8) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🎯 Point segmentorID-00003 at (5,8) assigned to: apostles bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00004 at (2,3) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00004: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (2,3) -> MERCENARIES: sat >= 2 BUT loy < 3.5 bundle.js:23327:15
🎯 Point segmentorID-00004 at (2,3) assigned to: mercenaries bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00005 at (4,7) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00005: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🎯 Point (4,7) -> NEAR-APOSTLES (bottom edge): sat>=3, loy=7 bundle.js:23248:21
🎯 Point segmentorID-00005 at (4,7) assigned to: near_apostles bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00006 at (5,9) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00006: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,9) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🎯 Point segmentorID-00006 at (5,9) assigned to: apostles bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00007 at (3,5) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00007: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (3,5) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00007 at (3,5) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00008 at (4,6) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00008: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (4,6) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00008 at (4,6) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00009 at (5,10) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00009: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,10) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🎯 Point segmentorID-00009 at (5,10) assigned to: apostles bundle.js:19888:15
📊 Final context-based grouping (includes ALL customers from each quadrant): 
Object { loyalists: 5, mercenaries: 1, hostages: 0, defectors: 0, apostles: 3, near_apostles: 1, terrorists: 0 }
bundle.js:19895:13
📊 Grouped customers: 
Object { loyalists: 5, mercenaries: 1, hostages: 0, defectors: 0, apostles: 3, near_apostles: 1, terrorists: 0 }
bundle.js:19786:13
🚨 About to call analyzeQuadrantProximity methods - threshold: 2 bundle.js:19795:13
🚨 Grouped customers available: 
Object { loyalists: 5, mercenaries: 1 }
bundle.js:19796:13
🔍 analyzeQuadrantProximity: loyalists -> mercenaries | customers: 5 | threshold: 2 bundle.js:19911:13
🔍 LOYALIST segmentorID-00000 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00001 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00002 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00002 NEAR MERCENARIES: loy=4, distance=0.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00007 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00007 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00008 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 analyzeQuadrantProximity: loyalists -> hostages | customers: 5 | threshold: 2 bundle.js:19911:13
🔍 LOYALIST segmentorID-00000 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00001 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00002 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00002 NEAR MERCENARIES: loy=4, distance=0.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00007 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00007 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00008 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 analyzeQuadrantProximity: mercenaries -> loyalists | customers: 1 | threshold: 2 bundle.js:19911:13
🔍 MERCENARIES segmentorID-00004 NEAR LOYALISTS: loy=3, distance=0.5, threshold=2.5 bundle.js:19609:19
🔍 MERCENARIES segmentorID-00004 NEAR DEFECTORS: loy=3, distance=0.5, threshold=1.5 bundle.js:19617:19
🔍 analyzeQuadrantProximity: mercenaries -> defectors | customers: 1 | threshold: 2 bundle.js:19911:13
🔍 MERCENARIES segmentorID-00004 NEAR LOYALISTS: loy=3, distance=0.5, threshold=2.5 bundle.js:19609:19
🔍 MERCENARIES segmentorID-00004 NEAR DEFECTORS: loy=3, distance=0.5, threshold=1.5 bundle.js:19617:19
🔍 analyzeQuadrantProximity: hostages -> loyalists | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeQuadrantProximity: hostages -> defectors | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeQuadrantProximity: defectors -> mercenaries | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeQuadrantProximity: defectors -> hostages | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeSpecialZoneProximity: loyalists -> apostles | customers: 5 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
❌ Special zone proximity analysis skipped for loyalists -> apostles (conditions not met) bundle.js:19977:15
🔍 analyzeSpecialZoneProximity: loyalists -> near_apostles | customers: 5 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
📊 After target zone exclusion: 5 customers (excluded 0 already in near_apostles zone) bundle.js:19996:13
🔍 Customer segmentorID-00002 at (3,4) is on quadrant boundary: hostages=true, mercenaries=false bundle.js:20226:15
🚫 EXCLUDING customer segmentorID-00002 at (3,4) - on quadrant boundary (Rule 8) bundle.js:20002:17
🔍 Customer segmentorID-00007 at (3,5) is on quadrant boundary: hostages=true, mercenaries=false bundle.js:20226:15
🚫 EXCLUDING customer segmentorID-00007 at (3,5) - on quadrant boundary (Rule 8) bundle.js:20002:17
📊 After boundary conflict exclusion: 3 customers (excluded 2 on quadrant boundaries) bundle.js:20006:13
📊 Special zone proximity result: loyalists -> near_apostles: 0 customers, 0 positions, avg distance: 0.00 bundle.js:20055:13
🔍 analyzeSpecialZoneProximity: defectors -> terrorists | customers: 0 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
🔍 analyzeSpecialZoneProximity: apostles -> loyalists | customers: 3 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
❌ Special zone proximity analysis skipped for apostles -> loyalists (conditions not met) bundle.js:19977:15
🔍 analyzeSpecialZoneProximity: near_apostles -> loyalists | customers: 1 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
❌ No boundaries found for target zone: loyalists bundle.js:19984:15
🔍 analyzeSpecialZoneProximity: terrorists -> defectors | customers: 0 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
🔍 DEBUGGING SUMMARY CALCULATION - About to call calculateSummaryMetrics bundle.js:19828:13
🔍 Analysis details: 
Object { loyalists_close_to_mercenaries: 5, loyalists_close_to_hostages: 2, mercenaries_close_to_loyalists: 1, mercenaries_close_to_defectors: 1, hostages_close_to_loyalists: 0, hostages_close_to_defectors: 0, defectors_close_to_mercenaries: 0, defectors_close_to_hostages: 0 }
bundle.js:19829:13
🔍 Special zones details: 
Object { apostles_close_to_loyalists: 0, near_apostles_close_to_loyalists: 0, terrorists_close_to_defectors: 0 }
bundle.js:19841:15
🚨 SUMMARY CALCULATION RESULT: 
Object { totalProximityCustomers: 9, totalProximityPositions: 8 }
bundle.js:19850:13
🎯 Proximity Analysis Result: 
Object { analysis: {…}, specialZones: {…}, summary: {…}, settings: {…} }
bundle.js:19865:13
ðŸ“Š Proximity analysis result: 
Object { analysis: {…}, specialZones: {…}, summary: {…}, settings: {…} }
bundle.js:15330:13
ðŸ”� DETAILED RESULT INSPECTION FROM ENHANCEDPROXIMITY: 
Object { resultType: "object", isAvailable: true, totalCustomersInResult: 9, unavailabilityReason: undefined, fullSummary: {…} }
bundle.js:15331:13
ðŸ”� DETAILED RESULT INSPECTION: 
Object { isAvailable: true, totalCustomersInResult: 9, unavailabilityReason: undefined }
bundle.js:15338:13
ðŸ”� FINAL RESULT BEING RETURNED FROM USEMEMO: 
Object { totalProximityCustomers: 9, isAvailable: true, objectReference: {…} }
bundle.js:15343:13
ðŸ”� ABOUT TO USE proximityAnalysis.summary: 
Object { totalProximityCustomers: 9, isAvailable: true, source: "proximityAnalysis.summary" }
bundle.js:15412:11
ðŸŽ¯ ProximitySection: Using context distribution: 
Object { loyalists: 5, mercenaries: 1, hostages: 0, defectors: 0, apostles: 3, terrorists: 0, near_apostles: 1, near_terrorists: 0 }
bundle.js:15169:11
ðŸ”� Context distribution totals: 
Object { loyalists: 5, apostles: 3, total_loyalist_area: 8, totalFromContext: 10 }
bundle.js:15173:11
🔍 getQuadrantForPoint called for point ID: segmentorID-00000 at (5,5) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00000: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,5) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00001 at (4,6) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00001: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (4,6) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00002 at (3,4) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00002: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (3,4) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00003 at (5,8) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00003: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,8) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00004 at (2,3) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00004: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (2,3) -> MERCENARIES: sat >= 2 BUT loy < 3.5 bundle.js:23327:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00005 at (4,7) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00005: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🎯 Point (4,7) -> NEAR-APOSTLES (bottom edge): sat>=3, loy=7 bundle.js:23248:21
🔍 getQuadrantForPoint called for point ID: segmentorID-00006 at (5,9) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00006: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,9) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🔍 getQuadrantForPoint called for point ID: segmentorID-00007 at (3,5) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00007: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (3,5) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00008 at (4,6) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00008: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (4,6) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00009 at (5,10) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00009: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,10) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
ðŸ”� MANUAL COUNT from getQuadrantForPoint: 
Object { loyalists: 5, apostles: 3, mercenaries: 1, near_apostles: 1 }
bundle.js:15188:13
ðŸ”� DISCREPANCY ANALYSIS: 
Object { contextSaysLoyalists: 5, manualCountLoyalists: 5, contextSaysApostles: 3, manualCountApostles: 3, contextTotal: 10, manualTotal: 10, difference: "Context: 10, Manual: 10" }
bundle.js:15189:13
🔄 PROXIMITY ANALYSIS USEMEMO RECALCULATING with dependencies: 
Object { dataLength: 10, satisfactionScale: "1-5", loyaltyScale: "0-10", midpointSat: 2, midpointLoy: 3.5, contextDistributionTotal: 10, manualAssignmentsSize: 0, apostlesZoneSize: 2, terroristsZoneSize: 1, isPremium: false, … }
bundle.js:15203:13
ðŸ”„ Proximity analysis recalculating with: 
Object { dataLength: 10, midpoint: {…}, contextDistribution: {…}, manualAssignments: 0 }
bundle.js:15218:13
ðŸ”� Creating DistanceCalculator with: 
Object { satisfactionScale: "1-5", loyaltyScale: "0-10", midpoint: {…} }
bundle.js:15226:13
ðŸ”� Creating EnhancedProximityClassifier with: 
Object { satisfactionScale: "1-5", loyaltyScale: "0-10", midpoint: {…} }
bundle.js:15317:13
🎯 EnhancedProximityClassifier.analyzeProximity called with: 
Object { dataLength: 10, isPremium: false, userThreshold: undefined, showSpecialZones: true, showNearApostles: true }
bundle.js:19765:13
🔍 EnhancedProximityClassifier.groupCustomersByQuadrant - Starting grouping by context assignments (NO proximity filtering) bundle.js:19884:13
🔍 getQuadrantForPoint called for point ID: segmentorID-00000 at (5,5) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00000: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,5) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00000 at (5,5) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00001 at (4,6) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00001: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (4,6) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00001 at (4,6) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00002 at (3,4) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00002: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (3,4) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00002 at (3,4) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00003 at (5,8) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00003: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,8) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🎯 Point segmentorID-00003 at (5,8) assigned to: apostles bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00004 at (2,3) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00004: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (2,3) -> MERCENARIES: sat >= 2 BUT loy < 3.5 bundle.js:23327:15
🎯 Point segmentorID-00004 at (2,3) assigned to: mercenaries bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00005 at (4,7) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00005: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🎯 Point (4,7) -> NEAR-APOSTLES (bottom edge): sat>=3, loy=7 bundle.js:23248:21
🎯 Point segmentorID-00005 at (4,7) assigned to: near_apostles bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00006 at (5,9) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00006: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,9) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🎯 Point segmentorID-00006 at (5,9) assigned to: apostles bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00007 at (3,5) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00007: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (3,5) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00007 at (3,5) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00008 at (4,6) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00008: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (4,6) -> LOYALISTS: sat >= 2 AND loy >= 3.5 bundle.js:23323:15
🎯 Point segmentorID-00008 at (4,6) assigned to: loyalists bundle.js:19888:15
🔍 getQuadrantForPoint called for point ID: segmentorID-00009 at (5,10) bundle.js:23189:13
🔍 About to check manual assignments - map has segmentorID-00009: false bundle.js:23190:13
🔧 calculateSpecialZoneBoundaries: apostlesZoneSize=2, terroristsZoneSize=1, maxSat=5, maxLoy=10 bundle.js:27901:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:27935:11
🔧 Apostles zone: satisfaction >= 3, loyalty >= 8 bundle.js:27936:11
🔧 Terrorists zone: satisfaction <= 2, loyalty <= 1 bundle.js:27937:11
🔧 Calculated boundaries: 
Object { apostles: {…}, terrorists: {…} }
bundle.js:23210:13
🔍 getQuadrantForPoint: showSpecialZones=true, showNearApostles=true bundle.js:23211:13
📍 Current midpoint in classification: sat=2, loy=3.5 bundle.js:23212:13
🔍 Near-apostles space check: apostlesMinSat=3, apostlesMinLoy=8, hasSpace=true bundle.js:23225:17
🔍 Near-apostles bounds: nearSat=2, nearLoy=7, apostlesSat>=3, apostlesLoy>=8 bundle.js:23238:19
🔍 Near-terrorists space check: terroristsMaxSat=2, terroristsMaxLoy=1, nearTerroristsMaxSat=3, nearTerroristsMaxLoy=2, midpoint=(2,3.5), hasSpace=false bundle.js:23277:19
🚫 Near-terrorists disabled: insufficient space between terrorists zone and midpoint bundle.js:23279:21
🎯 Point (5,10) -> APOSTLES: coordinates >= (3,8), creates 3x3 area bundle.js:23305:17
🎯 Point segmentorID-00009 at (5,10) assigned to: apostles bundle.js:19888:15
📊 Final context-based grouping (includes ALL customers from each quadrant): 
Object { loyalists: 5, mercenaries: 1, hostages: 0, defectors: 0, apostles: 3, near_apostles: 1, terrorists: 0 }
bundle.js:19895:13
📊 Grouped customers: 
Object { loyalists: 5, mercenaries: 1, hostages: 0, defectors: 0, apostles: 3, near_apostles: 1, terrorists: 0 }
bundle.js:19786:13
🚨 About to call analyzeQuadrantProximity methods - threshold: 2 bundle.js:19795:13
🚨 Grouped customers available: 
Object { loyalists: 5, mercenaries: 1 }
bundle.js:19796:13
🔍 analyzeQuadrantProximity: loyalists -> mercenaries | customers: 5 | threshold: 2 bundle.js:19911:13
🔍 LOYALIST segmentorID-00000 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00001 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00002 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00002 NEAR MERCENARIES: loy=4, distance=0.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00007 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00007 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00008 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 analyzeQuadrantProximity: loyalists -> hostages | customers: 5 | threshold: 2 bundle.js:19911:13
🔍 LOYALIST segmentorID-00000 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00001 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00002 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00002 NEAR MERCENARIES: loy=4, distance=0.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00007 NEAR HOSTAGES: sat=3, distance=1, threshold=1.5 bundle.js:19592:19
🔍 LOYALIST segmentorID-00007 NEAR MERCENARIES: loy=5, distance=1.5, threshold=2.5 bundle.js:19600:19
🔍 LOYALIST segmentorID-00008 NEAR MERCENARIES: loy=6, distance=2.5, threshold=2.5 bundle.js:19600:19
🔍 analyzeQuadrantProximity: mercenaries -> loyalists | customers: 1 | threshold: 2 bundle.js:19911:13
🔍 MERCENARIES segmentorID-00004 NEAR LOYALISTS: loy=3, distance=0.5, threshold=2.5 bundle.js:19609:19
🔍 MERCENARIES segmentorID-00004 NEAR DEFECTORS: loy=3, distance=0.5, threshold=1.5 bundle.js:19617:19
🔍 analyzeQuadrantProximity: mercenaries -> defectors | customers: 1 | threshold: 2 bundle.js:19911:13
🔍 MERCENARIES segmentorID-00004 NEAR LOYALISTS: loy=3, distance=0.5, threshold=2.5 bundle.js:19609:19
🔍 MERCENARIES segmentorID-00004 NEAR DEFECTORS: loy=3, distance=0.5, threshold=1.5 bundle.js:19617:19
🔍 analyzeQuadrantProximity: hostages -> loyalists | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeQuadrantProximity: hostages -> defectors | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeQuadrantProximity: defectors -> mercenaries | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeQuadrantProximity: defectors -> hostages | customers: 0 | threshold: 2 bundle.js:19911:13
🔍 analyzeSpecialZoneProximity: loyalists -> apostles | customers: 5 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
❌ Special zone proximity analysis skipped for loyalists -> apostles (conditions not met) bundle.js:19977:15
🔍 analyzeSpecialZoneProximity: loyalists -> near_apostles | customers: 5 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
📊 After target zone exclusion: 5 customers (excluded 0 already in near_apostles zone) bundle.js:19996:13
🔍 Customer segmentorID-00002 at (3,4) is on quadrant boundary: hostages=true, mercenaries=false bundle.js:20226:15
🚫 EXCLUDING customer segmentorID-00002 at (3,4) - on quadrant boundary (Rule 8) bundle.js:20002:17
🔍 Customer segmentorID-00007 at (3,5) is on quadrant boundary: hostages=true, mercenaries=false bundle.js:20226:15
🚫 EXCLUDING customer segmentorID-00007 at (3,5) - on quadrant boundary (Rule 8) bundle.js:20002:17
📊 After boundary conflict exclusion: 3 customers (excluded 2 on quadrant boundaries) bundle.js:20006:13
📊 Special zone proximity result: loyalists -> near_apostles: 0 customers, 0 positions, avg distance: 0.00 bundle.js:20055:13
🔍 analyzeSpecialZoneProximity: defectors -> terrorists | customers: 0 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
🔍 analyzeSpecialZoneProximity: apostles -> loyalists | customers: 3 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
❌ Special zone proximity analysis skipped for apostles -> loyalists (conditions not met) bundle.js:19977:15
🔍 analyzeSpecialZoneProximity: near_apostles -> loyalists | customers: 1 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
❌ No boundaries found for target zone: loyalists bundle.js:19984:15
🔍 analyzeSpecialZoneProximity: terrorists -> defectors | customers: 0 | showSpecialZones: true | showNearApostles: true bundle.js:19970:13
🔍 DEBUGGING SUMMARY CALCULATION - About to call calculateSummaryMetrics bundle.js:19828:13
🔍 Analysis details: 
Object { loyalists_close_to_mercenaries: 5, loyalists_close_to_hostages: 2, mercenaries_close_to_loyalists: 1, mercenaries_close_to_defectors: 1, hostages_close_to_loyalists: 0, hostages_close_to_defectors: 0, defectors_close_to_mercenaries: 0, defectors_close_to_hostages: 0 }
bundle.js:19829:13
🔍 Special zones details: 
Object { apostles_close_to_loyalists: 0, near_apostles_close_to_loyalists: 0, terrorists_close_to_defectors: 0 }
bundle.js:19841:15
🚨 SUMMARY CALCULATION RESULT: 
Object { totalProximityCustomers: 9, totalProximityPositions: 8 }
bundle.js:19850:13
🎯 Proximity Analysis Result: 
Object { analysis: {…}, specialZones: {…}, summary: {…}, settings: {…} }
bundle.js:19865:13
ðŸ“Š Proximity analysis result: 
Object { analysis: {…}, specialZones: {…}, summary: {…}, settings: {…} }
bundle.js:15330:13
ðŸ”� DETAILED RESULT INSPECTION FROM ENHANCEDPROXIMITY: 
Object { resultType: "object", isAvailable: true, totalCustomersInResult: 9, unavailabilityReason: undefined, fullSummary: {…} }
bundle.js:15331:13
ðŸ”� DETAILED RESULT INSPECTION: 
Object { isAvailable: true, totalCustomersInResult: 9, unavailabilityReason: undefined }
bundle.js:15338:13
ðŸ”� FINAL RESULT BEING RETURNED FROM USEMEMO: 
Object { totalProximityCustomers: 9, isAvailable: true, objectReference: {…} }
bundle.js:15343:13
ðŸ”� ABOUT TO USE proximityAnalysis.summary: 
Object { totalProximityCustomers: 9, isAvailable: true, source: "proximityAnalysis.summary" }
bundle.js:15412:11
